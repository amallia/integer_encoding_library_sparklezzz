/*
 * AFOR_unpack.hpp
 * AFOR解压调用的函数，子块大小为8/16/32。
 *
 */

#ifndef AFOR_UNPACK_HPP_
#define AFOR_UNPACK_HPP_

namespace paradise {
namespace index {
template<typename T>

void AFOR_unpack_32_0(T * des, const uint32_t *src) {
	int i;
	for (i = 0; i < 32; i++)
		des[i] = 0;
}

template<typename T>
void AFOR_unpack_32_1(T * des, const uint32_t *src) {
	des[0] = src[0] & 1;
	des[1] = (src[0] >> 1) & 1;
	des[2] = (src[0] >> 2) & 1;
	des[3] = (src[0] >> 3) & 1;
	des[4] = (src[0] >> 4) & 1;
	des[5] = (src[0] >> 5) & 1;
	des[6] = (src[0] >> 6) & 1;
	des[7] = (src[0] >> 7) & 1;
	des[8] = (src[0] >> 8) & 1;
	des[9] = (src[0] >> 9) & 1;
	des[10] = (src[0] >> 10) & 1;
	des[11] = (src[0] >> 11) & 1;
	des[12] = (src[0] >> 12) & 1;
	des[13] = (src[0] >> 13) & 1;
	des[14] = (src[0] >> 14) & 1;
	des[15] = (src[0] >> 15) & 1;
	des[16] = (src[0] >> 16) & 1;
	des[17] = (src[0] >> 17) & 1;
	des[18] = (src[0] >> 18) & 1;
	des[19] = (src[0] >> 19) & 1;
	des[20] = (src[0] >> 20) & 1;
	des[21] = (src[0] >> 21) & 1;
	des[22] = (src[0] >> 22) & 1;
	des[23] = (src[0] >> 23) & 1;
	des[24] = (src[0] >> 24) & 1;
	des[25] = (src[0] >> 25) & 1;
	des[26] = (src[0] >> 26) & 1;
	des[27] = (src[0] >> 27) & 1;
	des[28] = (src[0] >> 28) & 1;
	des[29] = (src[0] >> 29) & 1;
	des[30] = (src[0] >> 30) & 1;
	des[31] = (src[0] >> 31) & 1;
}

template<typename T>
void AFOR_unpack_32_2(T * des, const uint32_t *src) {
	des[0] = src[0] & 3;
	des[1] = (src[0] >> 2) & 3;
	des[2] = (src[0] >> 4) & 3;
	des[3] = (src[0] >> 6) & 3;
	des[4] = (src[0] >> 8) & 3;
	des[5] = (src[0] >> 10) & 3;
	des[6] = (src[0] >> 12) & 3;
	des[7] = (src[0] >> 14) & 3;
	des[8] = (src[0] >> 16) & 3;
	des[9] = (src[0] >> 18) & 3;
	des[10] = (src[0] >> 20) & 3;
	des[11] = (src[0] >> 22) & 3;
	des[12] = (src[0] >> 24) & 3;
	des[13] = (src[0] >> 26) & 3;
	des[14] = (src[0] >> 28) & 3;
	des[15] = (src[0] >> 30) & 3;
	des[16] = src[1] & 3;
	des[17] = (src[1] >> 2) & 3;
	des[18] = (src[1] >> 4) & 3;
	des[19] = (src[1] >> 6) & 3;
	des[20] = (src[1] >> 8) & 3;
	des[21] = (src[1] >> 10) & 3;
	des[22] = (src[1] >> 12) & 3;
	des[23] = (src[1] >> 14) & 3;
	des[24] = (src[1] >> 16) & 3;
	des[25] = (src[1] >> 18) & 3;
	des[26] = (src[1] >> 20) & 3;
	des[27] = (src[1] >> 22) & 3;
	des[28] = (src[1] >> 24) & 3;
	des[29] = (src[1] >> 26) & 3;
	des[30] = (src[1] >> 28) & 3;
	des[31] = (src[1] >> 30) & 3;
}

template<typename T>
void AFOR_unpack_32_3(T * des, const uint32_t *src) {
	des[0] = src[0] & 7;
	des[1] = (src[0] >> 3) & 7;
	des[2] = (src[0] >> 6) & 7;
	des[3] = (src[0] >> 9) & 7;
	des[4] = (src[0] >> 12) & 7;
	des[5] = (src[0] >> 15) & 7;
	des[6] = (src[0] >> 18) & 7;
	des[7] = (src[0] >> 21) & 7;
	des[8] = (src[0] >> 24) & 7;
	des[9] = (src[0] >> 27) & 7;
	des[10] = (src[0] >> 30) & 7;
	des[10] |= (src[1] << 2) & 7;
	des[11] = (src[1] >> 1) & 7;
	des[12] = (src[1] >> 4) & 7;
	des[13] = (src[1] >> 7) & 7;
	des[14] = (src[1] >> 10) & 7;
	des[15] = (src[1] >> 13) & 7;
	des[16] = (src[1] >> 16) & 7;
	des[17] = (src[1] >> 19) & 7;
	des[18] = (src[1] >> 22) & 7;
	des[19] = (src[1] >> 25) & 7;
	des[20] = (src[1] >> 28) & 7;
	des[21] = (src[1] >> 31) & 7;
	des[21] |= (src[2] << 1) & 7;
	des[22] = (src[2] >> 2) & 7;
	des[23] = (src[2] >> 5) & 7;
	des[24] = (src[2] >> 8) & 7;
	des[25] = (src[2] >> 11) & 7;
	des[26] = (src[2] >> 14) & 7;
	des[27] = (src[2] >> 17) & 7;
	des[28] = (src[2] >> 20) & 7;
	des[29] = (src[2] >> 23) & 7;
	des[30] = (src[2] >> 26) & 7;
	des[31] = (src[2] >> 29) & 7;
}

template<typename T>
void AFOR_unpack_32_4(T * des, const uint32_t *src) {
	des[0] = src[0] & 15;
	des[1] = (src[0] >> 4) & 15;
	des[2] = (src[0] >> 8) & 15;
	des[3] = (src[0] >> 12) & 15;
	des[4] = (src[0] >> 16) & 15;
	des[5] = (src[0] >> 20) & 15;
	des[6] = (src[0] >> 24) & 15;
	des[7] = (src[0] >> 28) & 15;
	des[8] = src[1] & 15;
	des[9] = (src[1] >> 4) & 15;
	des[10] = (src[1] >> 8) & 15;
	des[11] = (src[1] >> 12) & 15;
	des[12] = (src[1] >> 16) & 15;
	des[13] = (src[1] >> 20) & 15;
	des[14] = (src[1] >> 24) & 15;
	des[15] = (src[1] >> 28) & 15;
	des[16] = src[2] & 15;
	des[17] = (src[2] >> 4) & 15;
	des[18] = (src[2] >> 8) & 15;
	des[19] = (src[2] >> 12) & 15;
	des[20] = (src[2] >> 16) & 15;
	des[21] = (src[2] >> 20) & 15;
	des[22] = (src[2] >> 24) & 15;
	des[23] = (src[2] >> 28) & 15;
	des[24] = src[3] & 15;
	des[25] = (src[3] >> 4) & 15;
	des[26] = (src[3] >> 8) & 15;
	des[27] = (src[3] >> 12) & 15;
	des[28] = (src[3] >> 16) & 15;
	des[29] = (src[3] >> 20) & 15;
	des[30] = (src[3] >> 24) & 15;
	des[31] = (src[3] >> 28) & 15;
}

template<typename T>
void AFOR_unpack_32_5(T * des, const uint32_t *src) {
	des[0] = src[0] & 31;
	des[1] = (src[0] >> 5) & 31;
	des[2] = (src[0] >> 10) & 31;
	des[3] = (src[0] >> 15) & 31;
	des[4] = (src[0] >> 20) & 31;
	des[5] = (src[0] >> 25) & 31;
	des[6] = (src[0] >> 30) & 31;
	des[6] |= (src[1] << 2) & 31;
	des[7] = (src[1] >> 3) & 31;
	des[8] = (src[1] >> 8) & 31;
	des[9] = (src[1] >> 13) & 31;
	des[10] = (src[1] >> 18) & 31;
	des[11] = (src[1] >> 23) & 31;
	des[12] = (src[1] >> 28) & 31;
	des[12] |= (src[2] << 4) & 31;
	des[13] = (src[2] >> 1) & 31;
	des[14] = (src[2] >> 6) & 31;
	des[15] = (src[2] >> 11) & 31;
	des[16] = (src[2] >> 16) & 31;
	des[17] = (src[2] >> 21) & 31;
	des[18] = (src[2] >> 26) & 31;
	des[19] = (src[2] >> 31) & 31;
	des[19] |= (src[3] << 1) & 31;
	des[20] = (src[3] >> 4) & 31;
	des[21] = (src[3] >> 9) & 31;
	des[22] = (src[3] >> 14) & 31;
	des[23] = (src[3] >> 19) & 31;
	des[24] = (src[3] >> 24) & 31;
	des[25] = (src[3] >> 29) & 31;
	des[25] |= (src[4] << 3) & 31;
	des[26] = (src[4] >> 2) & 31;
	des[27] = (src[4] >> 7) & 31;
	des[28] = (src[4] >> 12) & 31;
	des[29] = (src[4] >> 17) & 31;
	des[30] = (src[4] >> 22) & 31;
	des[31] = (src[4] >> 27) & 31;
}

template<typename T>
void AFOR_unpack_32_6(T * des, const uint32_t *src) {
	des[0] = src[0] & 63;
	des[1] = (src[0] >> 6) & 63;
	des[2] = (src[0] >> 12) & 63;
	des[3] = (src[0] >> 18) & 63;
	des[4] = (src[0] >> 24) & 63;
	des[5] = (src[0] >> 30) & 63;
	des[5] |= (src[1] << 2) & 63;
	des[6] = (src[1] >> 4) & 63;
	des[7] = (src[1] >> 10) & 63;
	des[8] = (src[1] >> 16) & 63;
	des[9] = (src[1] >> 22) & 63;
	des[10] = (src[1] >> 28) & 63;
	des[10] |= (src[2] << 4) & 63;
	des[11] = (src[2] >> 2) & 63;
	des[12] = (src[2] >> 8) & 63;
	des[13] = (src[2] >> 14) & 63;
	des[14] = (src[2] >> 20) & 63;
	des[15] = (src[2] >> 26) & 63;
	des[16] = src[3] & 63;
	des[17] = (src[3] >> 6) & 63;
	des[18] = (src[3] >> 12) & 63;
	des[19] = (src[3] >> 18) & 63;
	des[20] = (src[3] >> 24) & 63;
	des[21] = (src[3] >> 30) & 63;
	des[21] |= (src[4] << 2) & 63;
	des[22] = (src[4] >> 4) & 63;
	des[23] = (src[4] >> 10) & 63;
	des[24] = (src[4] >> 16) & 63;
	des[25] = (src[4] >> 22) & 63;
	des[26] = (src[4] >> 28) & 63;
	des[26] |= (src[5] << 4) & 63;
	des[27] = (src[5] >> 2) & 63;
	des[28] = (src[5] >> 8) & 63;
	des[29] = (src[5] >> 14) & 63;
	des[30] = (src[5] >> 20) & 63;
	des[31] = (src[5] >> 26) & 63;
}

template<typename T>
void AFOR_unpack_32_7(T * des, const uint32_t *src) {
	des[0] = src[0] & 127;
	des[1] = (src[0] >> 7) & 127;
	des[2] = (src[0] >> 14) & 127;
	des[3] = (src[0] >> 21) & 127;
	des[4] = (src[0] >> 28) & 127;
	des[4] |= (src[1] << 4) & 127;
	des[5] = (src[1] >> 3) & 127;
	des[6] = (src[1] >> 10) & 127;
	des[7] = (src[1] >> 17) & 127;
	des[8] = (src[1] >> 24) & 127;
	des[9] = (src[1] >> 31) & 127;
	des[9] |= (src[2] << 1) & 127;
	des[10] = (src[2] >> 6) & 127;
	des[11] = (src[2] >> 13) & 127;
	des[12] = (src[2] >> 20) & 127;
	des[13] = (src[2] >> 27) & 127;
	des[13] |= (src[3] << 5) & 127;
	des[14] = (src[3] >> 2) & 127;
	des[15] = (src[3] >> 9) & 127;
	des[16] = (src[3] >> 16) & 127;
	des[17] = (src[3] >> 23) & 127;
	des[18] = (src[3] >> 30) & 127;
	des[18] |= (src[4] << 2) & 127;
	des[19] = (src[4] >> 5) & 127;
	des[20] = (src[4] >> 12) & 127;
	des[21] = (src[4] >> 19) & 127;
	des[22] = (src[4] >> 26) & 127;
	des[22] |= (src[5] << 6) & 127;
	des[23] = (src[5] >> 1) & 127;
	des[24] = (src[5] >> 8) & 127;
	des[25] = (src[5] >> 15) & 127;
	des[26] = (src[5] >> 22) & 127;
	des[27] = (src[5] >> 29) & 127;
	des[27] |= (src[6] << 3) & 127;
	des[28] = (src[6] >> 4) & 127;
	des[29] = (src[6] >> 11) & 127;
	des[30] = (src[6] >> 18) & 127;
	des[31] = (src[6] >> 25) & 127;
}

template<typename T>
void AFOR_unpack_32_8(T * des, const uint32_t *src) {
	des[0] = src[0] & 255;
	des[1] = (src[0] >> 8) & 255;
	des[2] = (src[0] >> 16) & 255;
	des[3] = (src[0] >> 24) & 255;
	des[4] = src[1] & 255;
	des[5] = (src[1] >> 8) & 255;
	des[6] = (src[1] >> 16) & 255;
	des[7] = (src[1] >> 24) & 255;
	des[8] = src[2] & 255;
	des[9] = (src[2] >> 8) & 255;
	des[10] = (src[2] >> 16) & 255;
	des[11] = (src[2] >> 24) & 255;
	des[12] = src[3] & 255;
	des[13] = (src[3] >> 8) & 255;
	des[14] = (src[3] >> 16) & 255;
	des[15] = (src[3] >> 24) & 255;
	des[16] = src[4] & 255;
	des[17] = (src[4] >> 8) & 255;
	des[18] = (src[4] >> 16) & 255;
	des[19] = (src[4] >> 24) & 255;
	des[20] = src[5] & 255;
	des[21] = (src[5] >> 8) & 255;
	des[22] = (src[5] >> 16) & 255;
	des[23] = (src[5] >> 24) & 255;
	des[24] = src[6] & 255;
	des[25] = (src[6] >> 8) & 255;
	des[26] = (src[6] >> 16) & 255;
	des[27] = (src[6] >> 24) & 255;
	des[28] = src[7] & 255;
	des[29] = (src[7] >> 8) & 255;
	des[30] = (src[7] >> 16) & 255;
	des[31] = (src[7] >> 24) & 255;
}

template<typename T>
void AFOR_unpack_32_9(T * des, const uint32_t *src) {
	des[0] = src[0] & 511;
	des[1] = (src[0] >> 9) & 511;
	des[2] = (src[0] >> 18) & 511;
	des[3] = (src[0] >> 27) & 511;
	des[3] |= (src[1] << 5) & 511;
	des[4] = (src[1] >> 4) & 511;
	des[5] = (src[1] >> 13) & 511;
	des[6] = (src[1] >> 22) & 511;
	des[7] = (src[1] >> 31) & 511;
	des[7] |= (src[2] << 1) & 511;
	des[8] = (src[2] >> 8) & 511;
	des[9] = (src[2] >> 17) & 511;
	des[10] = (src[2] >> 26) & 511;
	des[10] |= (src[3] << 6) & 511;
	des[11] = (src[3] >> 3) & 511;
	des[12] = (src[3] >> 12) & 511;
	des[13] = (src[3] >> 21) & 511;
	des[14] = (src[3] >> 30) & 511;
	des[14] |= (src[4] << 2) & 511;
	des[15] = (src[4] >> 7) & 511;
	des[16] = (src[4] >> 16) & 511;
	des[17] = (src[4] >> 25) & 511;
	des[17] |= (src[5] << 7) & 511;
	des[18] = (src[5] >> 2) & 511;
	des[19] = (src[5] >> 11) & 511;
	des[20] = (src[5] >> 20) & 511;
	des[21] = (src[5] >> 29) & 511;
	des[21] |= (src[6] << 3) & 511;
	des[22] = (src[6] >> 6) & 511;
	des[23] = (src[6] >> 15) & 511;
	des[24] = (src[6] >> 24) & 511;
	des[24] |= (src[7] << 8) & 511;
	des[25] = (src[7] >> 1) & 511;
	des[26] = (src[7] >> 10) & 511;
	des[27] = (src[7] >> 19) & 511;
	des[28] = (src[7] >> 28) & 511;
	des[28] |= (src[8] << 4) & 511;
	des[29] = (src[8] >> 5) & 511;
	des[30] = (src[8] >> 14) & 511;
	des[31] = (src[8] >> 23) & 511;
}

template<typename T>
void AFOR_unpack_32_10(T * des, const uint32_t *src) {
	des[0] = src[0] & 1023;
	des[1] = (src[0] >> 10) & 1023;
	des[2] = (src[0] >> 20) & 1023;
	des[3] = (src[0] >> 30) & 1023;
	des[3] |= (src[1] << 2) & 1023;
	des[4] = (src[1] >> 8) & 1023;
	des[5] = (src[1] >> 18) & 1023;
	des[6] = (src[1] >> 28) & 1023;
	des[6] |= (src[2] << 4) & 1023;
	des[7] = (src[2] >> 6) & 1023;
	des[8] = (src[2] >> 16) & 1023;
	des[9] = (src[2] >> 26) & 1023;
	des[9] |= (src[3] << 6) & 1023;
	des[10] = (src[3] >> 4) & 1023;
	des[11] = (src[3] >> 14) & 1023;
	des[12] = (src[3] >> 24) & 1023;
	des[12] |= (src[4] << 8) & 1023;
	des[13] = (src[4] >> 2) & 1023;
	des[14] = (src[4] >> 12) & 1023;
	des[15] = (src[4] >> 22) & 1023;
	des[16] = src[5] & 1023;
	des[17] = (src[5] >> 10) & 1023;
	des[18] = (src[5] >> 20) & 1023;
	des[19] = (src[5] >> 30) & 1023;
	des[19] |= (src[6] << 2) & 1023;
	des[20] = (src[6] >> 8) & 1023;
	des[21] = (src[6] >> 18) & 1023;
	des[22] = (src[6] >> 28) & 1023;
	des[22] |= (src[7] << 4) & 1023;
	des[23] = (src[7] >> 6) & 1023;
	des[24] = (src[7] >> 16) & 1023;
	des[25] = (src[7] >> 26) & 1023;
	des[25] |= (src[8] << 6) & 1023;
	des[26] = (src[8] >> 4) & 1023;
	des[27] = (src[8] >> 14) & 1023;
	des[28] = (src[8] >> 24) & 1023;
	des[28] |= (src[9] << 8) & 1023;
	des[29] = (src[9] >> 2) & 1023;
	des[30] = (src[9] >> 12) & 1023;
	des[31] = (src[9] >> 22) & 1023;
}
template<typename T>
void AFOR_unpack_32_11(T * des, const uint32_t *src) {
	des[0] = src[0] & 2047;
	des[1] = (src[0] >> 11) & 2047;
	des[2] = (src[0] >> 22) & 2047;
	des[2] |= (src[1] << 10) & 2047;
	des[3] = (src[1] >> 1) & 2047;
	des[4] = (src[1] >> 12) & 2047;
	des[5] = (src[1] >> 23) & 2047;
	des[5] |= (src[2] << 9) & 2047;
	des[6] = (src[2] >> 2) & 2047;
	des[7] = (src[2] >> 13) & 2047;
	des[8] = (src[2] >> 24) & 2047;
	des[8] |= (src[3] << 8) & 2047;
	des[9] = (src[3] >> 3) & 2047;
	des[10] = (src[3] >> 14) & 2047;
	des[11] = (src[3] >> 25) & 2047;
	des[11] |= (src[4] << 7) & 2047;
	des[12] = (src[4] >> 4) & 2047;
	des[13] = (src[4] >> 15) & 2047;
	des[14] = (src[4] >> 26) & 2047;
	des[14] |= (src[5] << 6) & 2047;
	des[15] = (src[5] >> 5) & 2047;
	des[16] = (src[5] >> 16) & 2047;
	des[17] = (src[5] >> 27) & 2047;
	des[17] |= (src[6] << 5) & 2047;
	des[18] = (src[6] >> 6) & 2047;
	des[19] = (src[6] >> 17) & 2047;
	des[20] = (src[6] >> 28) & 2047;
	des[20] |= (src[7] << 4) & 2047;
	des[21] = (src[7] >> 7) & 2047;
	des[22] = (src[7] >> 18) & 2047;
	des[23] = (src[7] >> 29) & 2047;
	des[23] |= (src[8] << 3) & 2047;
	des[24] = (src[8] >> 8) & 2047;
	des[25] = (src[8] >> 19) & 2047;
	des[26] = (src[8] >> 30) & 2047;
	des[26] |= (src[9] << 2) & 2047;
	des[27] = (src[9] >> 9) & 2047;
	des[28] = (src[9] >> 20) & 2047;
	des[29] = (src[9] >> 31) & 2047;
	des[29] |= (src[10] << 1) & 2047;
	des[30] = (src[10] >> 10) & 2047;
	des[31] = (src[10] >> 21) & 2047;
}
template<typename T>
void AFOR_unpack_32_12(T * des, const uint32_t *src) {
	des[0] = src[0] & 4095;
	des[1] = (src[0] >> 12) & 4095;
	des[2] = (src[0] >> 24) & 4095;
	des[2] |= (src[1] << 8) & 4095;
	des[3] = (src[1] >> 4) & 4095;
	des[4] = (src[1] >> 16) & 4095;
	des[5] = (src[1] >> 28) & 4095;
	des[5] |= (src[2] << 4) & 4095;
	des[6] = (src[2] >> 8) & 4095;
	des[7] = (src[2] >> 20) & 4095;
	des[8] = src[3] & 4095;
	des[9] = (src[3] >> 12) & 4095;
	des[10] = (src[3] >> 24) & 4095;
	des[10] |= (src[4] << 8) & 4095;
	des[11] = (src[4] >> 4) & 4095;
	des[12] = (src[4] >> 16) & 4095;
	des[13] = (src[4] >> 28) & 4095;
	des[13] |= (src[5] << 4) & 4095;
	des[14] = (src[5] >> 8) & 4095;
	des[15] = (src[5] >> 20) & 4095;
	des[16] = src[6] & 4095;
	des[17] = (src[6] >> 12) & 4095;
	des[18] = (src[6] >> 24) & 4095;
	des[18] |= (src[7] << 8) & 4095;
	des[19] = (src[7] >> 4) & 4095;
	des[20] = (src[7] >> 16) & 4095;
	des[21] = (src[7] >> 28) & 4095;
	des[21] |= (src[8] << 4) & 4095;
	des[22] = (src[8] >> 8) & 4095;
	des[23] = (src[8] >> 20) & 4095;
	des[24] = src[9] & 4095;
	des[25] = (src[9] >> 12) & 4095;
	des[26] = (src[9] >> 24) & 4095;
	des[26] |= (src[10] << 8) & 4095;
	des[27] = (src[10] >> 4) & 4095;
	des[28] = (src[10] >> 16) & 4095;
	des[29] = (src[10] >> 28) & 4095;
	des[29] |= (src[11] << 4) & 4095;
	des[30] = (src[11] >> 8) & 4095;
	des[31] = (src[11] >> 20) & 4095;
}
template<typename T>
void AFOR_unpack_32_13(T * des, const uint32_t *src) {
	des[0] = src[0] & 8191;
	des[1] = (src[0] >> 13) & 8191;
	des[2] = (src[0] >> 26) & 8191;
	des[2] |= (src[1] << 6) & 8191;
	des[3] = (src[1] >> 7) & 8191;
	des[4] = (src[1] >> 20) & 8191;
	des[4] |= (src[2] << 12) & 8191;
	des[5] = (src[2] >> 1) & 8191;
	des[6] = (src[2] >> 14) & 8191;
	des[7] = (src[2] >> 27) & 8191;
	des[7] |= (src[3] << 5) & 8191;
	des[8] = (src[3] >> 8) & 8191;
	des[9] = (src[3] >> 21) & 8191;
	des[9] |= (src[4] << 11) & 8191;
	des[10] = (src[4] >> 2) & 8191;
	des[11] = (src[4] >> 15) & 8191;
	des[12] = (src[4] >> 28) & 8191;
	des[12] |= (src[5] << 4) & 8191;
	des[13] = (src[5] >> 9) & 8191;
	des[14] = (src[5] >> 22) & 8191;
	des[14] |= (src[6] << 10) & 8191;
	des[15] = (src[6] >> 3) & 8191;
	des[16] = (src[6] >> 16) & 8191;
	des[17] = (src[6] >> 29) & 8191;
	des[17] |= (src[7] << 3) & 8191;
	des[18] = (src[7] >> 10) & 8191;
	des[19] = (src[7] >> 23) & 8191;
	des[19] |= (src[8] << 9) & 8191;
	des[20] = (src[8] >> 4) & 8191;
	des[21] = (src[8] >> 17) & 8191;
	des[22] = (src[8] >> 30) & 8191;
	des[22] |= (src[9] << 2) & 8191;
	des[23] = (src[9] >> 11) & 8191;
	des[24] = (src[9] >> 24) & 8191;
	des[24] |= (src[10] << 8) & 8191;
	des[25] = (src[10] >> 5) & 8191;
	des[26] = (src[10] >> 18) & 8191;
	des[27] = (src[10] >> 31) & 8191;
	des[27] |= (src[11] << 1) & 8191;
	des[28] = (src[11] >> 12) & 8191;
	des[29] = (src[11] >> 25) & 8191;
	des[29] |= (src[12] << 7) & 8191;
	des[30] = (src[12] >> 6) & 8191;
	des[31] = (src[12] >> 19) & 8191;
}
template<typename T>
void AFOR_unpack_32_14(T * des, const uint32_t *src) {
	des[0] = src[0] & 16383;
	des[1] = (src[0] >> 14) & 16383;
	des[2] = (src[0] >> 28) & 16383;
	des[2] |= (src[1] << 4) & 16383;
	des[3] = (src[1] >> 10) & 16383;
	des[4] = (src[1] >> 24) & 16383;
	des[4] |= (src[2] << 8) & 16383;
	des[5] = (src[2] >> 6) & 16383;
	des[6] = (src[2] >> 20) & 16383;
	des[6] |= (src[3] << 12) & 16383;
	des[7] = (src[3] >> 2) & 16383;
	des[8] = (src[3] >> 16) & 16383;
	des[9] = (src[3] >> 30) & 16383;
	des[9] |= (src[4] << 2) & 16383;
	des[10] = (src[4] >> 12) & 16383;
	des[11] = (src[4] >> 26) & 16383;
	des[11] |= (src[5] << 6) & 16383;
	des[12] = (src[5] >> 8) & 16383;
	des[13] = (src[5] >> 22) & 16383;
	des[13] |= (src[6] << 10) & 16383;
	des[14] = (src[6] >> 4) & 16383;
	des[15] = (src[6] >> 18) & 16383;
	des[16] = src[7] & 16383;
	des[17] = (src[7] >> 14) & 16383;
	des[18] = (src[7] >> 28) & 16383;
	des[18] |= (src[8] << 4) & 16383;
	des[19] = (src[8] >> 10) & 16383;
	des[20] = (src[8] >> 24) & 16383;
	des[20] |= (src[9] << 8) & 16383;
	des[21] = (src[9] >> 6) & 16383;
	des[22] = (src[9] >> 20) & 16383;
	des[22] |= (src[10] << 12) & 16383;
	des[23] = (src[10] >> 2) & 16383;
	des[24] = (src[10] >> 16) & 16383;
	des[25] = (src[10] >> 30) & 16383;
	des[25] |= (src[11] << 2) & 16383;
	des[26] = (src[11] >> 12) & 16383;
	des[27] = (src[11] >> 26) & 16383;
	des[27] |= (src[12] << 6) & 16383;
	des[28] = (src[12] >> 8) & 16383;
	des[29] = (src[12] >> 22) & 16383;
	des[29] |= (src[13] << 10) & 16383;
	des[30] = (src[13] >> 4) & 16383;
	des[31] = (src[13] >> 18) & 16383;
}
template<typename T>
void AFOR_unpack_32_15(T * des, const uint32_t *src) {
	des[0] = src[0] & 32767;
	des[1] = (src[0] >> 15) & 32767;
	des[2] = (src[0] >> 30) & 32767;
	des[2] |= (src[1] << 2) & 32767;
	des[3] = (src[1] >> 13) & 32767;
	des[4] = (src[1] >> 28) & 32767;
	des[4] |= (src[2] << 4) & 32767;
	des[5] = (src[2] >> 11) & 32767;
	des[6] = (src[2] >> 26) & 32767;
	des[6] |= (src[3] << 6) & 32767;
	des[7] = (src[3] >> 9) & 32767;
	des[8] = (src[3] >> 24) & 32767;
	des[8] |= (src[4] << 8) & 32767;
	des[9] = (src[4] >> 7) & 32767;
	des[10] = (src[4] >> 22) & 32767;
	des[10] |= (src[5] << 10) & 32767;
	des[11] = (src[5] >> 5) & 32767;
	des[12] = (src[5] >> 20) & 32767;
	des[12] |= (src[6] << 12) & 32767;
	des[13] = (src[6] >> 3) & 32767;
	des[14] = (src[6] >> 18) & 32767;
	des[14] |= (src[7] << 14) & 32767;
	des[15] = (src[7] >> 1) & 32767;
	des[16] = (src[7] >> 16) & 32767;
	des[17] = (src[7] >> 31) & 32767;
	des[17] |= (src[8] << 1) & 32767;
	des[18] = (src[8] >> 14) & 32767;
	des[19] = (src[8] >> 29) & 32767;
	des[19] |= (src[9] << 3) & 32767;
	des[20] = (src[9] >> 12) & 32767;
	des[21] = (src[9] >> 27) & 32767;
	des[21] |= (src[10] << 5) & 32767;
	des[22] = (src[10] >> 10) & 32767;
	des[23] = (src[10] >> 25) & 32767;
	des[23] |= (src[11] << 7) & 32767;
	des[24] = (src[11] >> 8) & 32767;
	des[25] = (src[11] >> 23) & 32767;
	des[25] |= (src[12] << 9) & 32767;
	des[26] = (src[12] >> 6) & 32767;
	des[27] = (src[12] >> 21) & 32767;
	des[27] |= (src[13] << 11) & 32767;
	des[28] = (src[13] >> 4) & 32767;
	des[29] = (src[13] >> 19) & 32767;
	des[29] |= (src[14] << 13) & 32767;
	des[30] = (src[14] >> 2) & 32767;
	des[31] = (src[14] >> 17) & 32767;
}
template<typename T>
void AFOR_unpack_32_16(T * des, const uint32_t *src) {
	des[0] = src[0] & 65535;
	des[1] = src[0] >> 16;
	des[2] = src[1] & 65535;
	des[3] = src[1] >> 16;
	des[4] = src[2] & 65535;
	des[5] = src[2] >> 16;
	des[6] = src[3] & 65535;
	des[7] = src[3] >> 16;
	des[8] = src[4] & 65535;
	des[9] = src[4] >> 16;
	des[10] = src[5] & 65535;
	des[11] = src[5] >> 16;
	des[12] = src[6] & 65535;
	des[13] = src[6] >> 16;
	des[14] = src[7] & 65535;
	des[15] = src[7] >> 16;
	des[16] = src[8] & 65535;
	des[17] = src[8] >> 16;
	des[18] = src[9] & 65535;
	des[19] = src[9] >> 16;
	des[20] = src[10] & 65535;
	des[21] = src[10] >> 16;
	des[22] = src[11] & 65535;
	des[23] = src[11] >> 16;
	des[24] = src[12] & 65535;
	des[25] = src[12] >> 16;
	des[26] = src[13] & 65535;
	des[27] = src[13] >> 16;
	des[28] = src[14] & 65535;
	des[29] = src[14] >> 16;
	des[30] = src[15] & 65535;
	des[31] = src[15] >> 16;
}

template<typename T>
void AFOR_unpack_32_17(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 131071;
	des[1] = (src[0] >> 17) & 131071;
	des[1] |= (src[1] << 15) & 131071;
	des[2] = (src[1] >> 2) & 131071;
	des[3] = (src[1] >> 19) & 131071;
	des[3] |= (src[2] << 13) & 131071;
	des[4] = (src[2] >> 4) & 131071;
	des[5] = (src[2] >> 21) & 131071;
	des[5] |= (src[3] << 11) & 131071;
	des[6] = (src[3] >> 6) & 131071;
	des[7] = (src[3] >> 23) & 131071;
	des[7] |= (src[4] << 9) & 131071;
	des[8] = (src[4] >> 8) & 131071;
	des[9] = (src[4] >> 25) & 131071;
	des[9] |= (src[5] << 7) & 131071;
	des[10] = (src[5] >> 10) & 131071;
	des[11] = (src[5] >> 27) & 131071;
	des[11] |= (src[6] << 5) & 131071;
	des[12] = (src[6] >> 12) & 131071;
	des[13] = (src[6] >> 29) & 131071;
	des[13] |= (src[7] << 3) & 131071;
	des[14] = (src[7] >> 14) & 131071;
	des[15] = (src[7] >> 31) & 131071;
	des[15] |= (src[8] << 1) & 131071;
	des[16] = (src[8] >> 16) & 131071;
	des[16] |= (src[9] << 16) & 131071;
	des[17] = (src[9] >> 1) & 131071;
	des[18] = (src[9] >> 18) & 131071;
	des[18] |= (src[10] << 14) & 131071;
	des[19] = (src[10] >> 3) & 131071;
	des[20] = (src[10] >> 20) & 131071;
	des[20] |= (src[11] << 12) & 131071;
	des[21] = (src[11] >> 5) & 131071;
	des[22] = (src[11] >> 22) & 131071;
	des[22] |= (src[12] << 10) & 131071;
	des[23] = (src[12] >> 7) & 131071;
	des[24] = (src[12] >> 24) & 131071;
	des[24] |= (src[13] << 8) & 131071;
	des[25] = (src[13] >> 9) & 131071;
	des[26] = (src[13] >> 26) & 131071;
	des[26] |= (src[14] << 6) & 131071;
	des[27] = (src[14] >> 11) & 131071;
	des[28] = (src[14] >> 28) & 131071;
	des[28] |= (src[15] << 4) & 131071;
	des[29] = (src[15] >> 13) & 131071;
	des[30] = (src[15] >> 30) & 131071;
	des[30] |= (src[16] << 2) & 131071;
	des[31] = (src[16] >> 15) & 131071;
}

template<typename T>
void AFOR_unpack_32_18(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 262143;
	des[1] = (src[0] >> 18) & 262143;
	des[1] |= (src[1] << 14) & 262143;
	des[2] = (src[1] >> 4) & 262143;
	des[3] = (src[1] >> 22) & 262143;
	des[3] |= (src[2] << 10) & 262143;
	des[4] = (src[2] >> 8) & 262143;
	des[5] = (src[2] >> 26) & 262143;
	des[5] |= (src[3] << 6) & 262143;
	des[6] = (src[3] >> 12) & 262143;
	des[7] = (src[3] >> 30) & 262143;
	des[7] |= (src[4] << 2) & 262143;
	des[8] = (src[4] >> 16) & 262143;
	des[8] |= (src[5] << 16) & 262143;
	des[9] = (src[5] >> 2) & 262143;
	des[10] = (src[5] >> 20) & 262143;
	des[10] |= (src[6] << 12) & 262143;
	des[11] = (src[6] >> 6) & 262143;
	des[12] = (src[6] >> 24) & 262143;
	des[12] |= (src[7] << 8) & 262143;
	des[13] = (src[7] >> 10) & 262143;
	des[14] = (src[7] >> 28) & 262143;
	des[14] |= (src[8] << 4) & 262143;
	des[15] = (src[8] >> 14) & 262143;
	des[16] = (src[9]) & 262143;
	des[17] = (src[9] >> 18) & 262143;
	des[17] |= (src[10] << 14) & 262143;
	des[18] = (src[10] >> 4) & 262143;
	des[19] = (src[10] >> 22) & 262143;
	des[19] |= (src[11] << 10) & 262143;
	des[20] = (src[11] >> 8) & 262143;
	des[21] = (src[11] >> 26) & 262143;
	des[21] |= (src[12] << 6) & 262143;
	des[22] = (src[12] >> 12) & 262143;
	des[23] = (src[12] >> 30) & 262143;
	des[23] |= (src[13] << 2) & 262143;
	des[24] = (src[13] >> 16) & 262143;
	des[24] |= (src[14] << 16) & 262143;
	des[25] = (src[14] >> 2) & 262143;
	des[26] = (src[14] >> 20) & 262143;
	des[26] |= (src[15] << 12) & 262143;
	des[27] = (src[15] >> 6) & 262143;
	des[28] = (src[15] >> 24) & 262143;
	des[28] |= (src[16] << 8) & 262143;
	des[29] = (src[16] >> 10) & 262143;
	des[30] = (src[16] >> 28) & 262143;
	des[30] |= (src[17] << 4) & 262143;
	des[31] = (src[17] >> 14) & 262143;
}

template<typename T>
void AFOR_unpack_32_19(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 524287;
	des[1] = (src[0] >> 19) & 524287;
	des[1] |= (src[1] << 13) & 524287;
	des[2] = (src[1] >> 6) & 524287;
	des[3] = (src[1] >> 25) & 524287;
	des[3] |= (src[2] << 7) & 524287;
	des[4] = (src[2] >> 12) & 524287;
	des[5] = (src[2] >> 31) & 524287;
	des[5] |= (src[3] << 1) & 524287;
	des[6] = (src[3] >> 18) & 524287;
	des[6] |= (src[4] << 14) & 524287;
	des[7] = (src[4] >> 5) & 524287;
	des[8] = (src[4] >> 24) & 524287;
	des[8] |= (src[5] << 8) & 524287;
	des[9] = (src[5] >> 11) & 524287;
	des[10] = (src[5] >> 30) & 524287;
	des[10] |= (src[6] << 2) & 524287;
	des[11] = (src[6] >> 17) & 524287;
	des[11] |= (src[7] << 15) & 524287;
	des[12] = (src[7] >> 4) & 524287;
	des[13] = (src[7] >> 23) & 524287;
	des[13] |= (src[8] << 9) & 524287;
	des[14] = (src[8] >> 10) & 524287;
	des[15] = (src[8] >> 29) & 524287;
	des[15] |= (src[9] << 3) & 524287;
	des[16] = (src[9] >> 16) & 524287;
	des[16] |= (src[10] << 16) & 524287;
	des[17] = (src[10] >> 3) & 524287;
	des[18] = (src[10] >> 22) & 524287;
	des[18] |= (src[11] << 10) & 524287;
	des[19] = (src[11] >> 9) & 524287;
	des[20] = (src[11] >> 28) & 524287;
	des[20] |= (src[12] << 4) & 524287;
	des[21] = (src[12] >> 15) & 524287;
	des[21] |= (src[13] << 17) & 524287;
	des[22] = (src[13] >> 2) & 524287;
	des[23] = (src[13] >> 21) & 524287;
	des[23] |= (src[14] << 11) & 524287;
	des[24] = (src[14] >> 8) & 524287;
	des[25] = (src[14] >> 27) & 524287;
	des[25] |= (src[15] << 5) & 524287;
	des[26] = (src[15] >> 14) & 524287;
	des[26] |= (src[16] << 18) & 524287;
	des[27] = (src[16] >> 1) & 524287;
	des[28] = (src[16] >> 20) & 524287;
	des[28] |= (src[17] << 12) & 524287;
	des[29] = (src[17] >> 7) & 524287;
	des[30] = (src[17] >> 26) & 524287;
	des[30] |= (src[18] << 6) & 524287;
	des[31] = (src[18] >> 13) & 524287;
}

template<typename T>
void AFOR_unpack_32_20(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 1048575;
	des[1] = (src[0] >> 20) & 1048575;
	des[1] |= (src[1] << 12) & 1048575;
	des[2] = (src[1] >> 8) & 1048575;
	des[3] = (src[1] >> 28) & 1048575;
	des[3] |= (src[2] << 4) & 1048575;
	des[4] = (src[2] >> 16) & 1048575;
	des[4] |= (src[3] << 16) & 1048575;
	des[5] = (src[3] >> 4) & 1048575;
	des[6] = (src[3] >> 24) & 1048575;
	des[6] |= (src[4] << 8) & 1048575;
	des[7] = (src[4] >> 12) & 1048575;
	des[8] = (src[5]) & 1048575;
	des[9] = (src[5] >> 20) & 1048575;
	des[9] |= (src[6] << 12) & 1048575;
	des[10] = (src[6] >> 8) & 1048575;
	des[11] = (src[6] >> 28) & 1048575;
	des[11] |= (src[7] << 4) & 1048575;
	des[12] = (src[7] >> 16) & 1048575;
	des[12] |= (src[8] << 16) & 1048575;
	des[13] = (src[8] >> 4) & 1048575;
	des[14] = (src[8] >> 24) & 1048575;
	des[14] |= (src[9] << 8) & 1048575;
	des[15] = (src[9] >> 12) & 1048575;
	des[16] = (src[10]) & 1048575;
	des[17] = (src[10] >> 20) & 1048575;
	des[17] |= (src[11] << 12) & 1048575;
	des[18] = (src[11] >> 8) & 1048575;
	des[19] = (src[11] >> 28) & 1048575;
	des[19] |= (src[12] << 4) & 1048575;
	des[20] = (src[12] >> 16) & 1048575;
	des[20] |= (src[13] << 16) & 1048575;
	des[21] = (src[13] >> 4) & 1048575;
	des[22] = (src[13] >> 24) & 1048575;
	des[22] |= (src[14] << 8) & 1048575;
	des[23] = (src[14] >> 12) & 1048575;
	des[24] = (src[15]) & 1048575;
	des[25] = (src[15] >> 20) & 1048575;
	des[25] |= (src[16] << 12) & 1048575;
	des[26] = (src[16] >> 8) & 1048575;
	des[27] = (src[16] >> 28) & 1048575;
	des[27] |= (src[17] << 4) & 1048575;
	des[28] = (src[17] >> 16) & 1048575;
	des[28] |= (src[18] << 16) & 1048575;
	des[29] = (src[18] >> 4) & 1048575;
	des[30] = (src[18] >> 24) & 1048575;
	des[30] |= (src[19] << 8) & 1048575;
	des[31] = (src[19] >> 12) & 1048575;
}

template<typename T>
void AFOR_unpack_32_21(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 2097151;
	des[1] = (src[0] >> 21) & 2097151;
	des[1] |= (src[1] << 11) & 2097151;
	des[2] = (src[1] >> 10) & 2097151;
	des[3] = (src[1] >> 31) & 2097151;
	des[3] |= (src[2] << 1) & 2097151;
	des[4] = (src[2] >> 20) & 2097151;
	des[4] |= (src[3] << 12) & 2097151;
	des[5] = (src[3] >> 9) & 2097151;
	des[6] = (src[3] >> 30) & 2097151;
	des[6] |= (src[4] << 2) & 2097151;
	des[7] = (src[4] >> 19) & 2097151;
	des[7] |= (src[5] << 13) & 2097151;
	des[8] = (src[5] >> 8) & 2097151;
	des[9] = (src[5] >> 29) & 2097151;
	des[9] |= (src[6] << 3) & 2097151;
	des[10] = (src[6] >> 18) & 2097151;
	des[10] |= (src[7] << 14) & 2097151;
	des[11] = (src[7] >> 7) & 2097151;
	des[12] = (src[7] >> 28) & 2097151;
	des[12] |= (src[8] << 4) & 2097151;
	des[13] = (src[8] >> 17) & 2097151;
	des[13] |= (src[9] << 15) & 2097151;
	des[14] = (src[9] >> 6) & 2097151;
	des[15] = (src[9] >> 27) & 2097151;
	des[15] |= (src[10] << 5) & 2097151;
	des[16] = (src[10] >> 16) & 2097151;
	des[16] |= (src[11] << 16) & 2097151;
	des[17] = (src[11] >> 5) & 2097151;
	des[18] = (src[11] >> 26) & 2097151;
	des[18] |= (src[12] << 6) & 2097151;
	des[19] = (src[12] >> 15) & 2097151;
	des[19] |= (src[13] << 17) & 2097151;
	des[20] = (src[13] >> 4) & 2097151;
	des[21] = (src[13] >> 25) & 2097151;
	des[21] |= (src[14] << 7) & 2097151;
	des[22] = (src[14] >> 14) & 2097151;
	des[22] |= (src[15] << 18) & 2097151;
	des[23] = (src[15] >> 3) & 2097151;
	des[24] = (src[15] >> 24) & 2097151;
	des[24] |= (src[16] << 8) & 2097151;
	des[25] = (src[16] >> 13) & 2097151;
	des[25] |= (src[17] << 19) & 2097151;
	des[26] = (src[17] >> 2) & 2097151;
	des[27] = (src[17] >> 23) & 2097151;
	des[27] |= (src[18] << 9) & 2097151;
	des[28] = (src[18] >> 12) & 2097151;
	des[28] |= (src[19] << 20) & 2097151;
	des[29] = (src[19] >> 1) & 2097151;
	des[30] = (src[19] >> 22) & 2097151;
	des[30] |= (src[20] << 10) & 2097151;
	des[31] = (src[20] >> 11) & 2097151;
}

template<typename T>
void AFOR_unpack_32_22(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 4194303;
	des[1] = (src[0] >> 22) & 4194303;
	des[1] |= (src[1] << 10) & 4194303;
	des[2] = (src[1] >> 12) & 4194303;
	des[2] |= (src[2] << 20) & 4194303;
	des[3] = (src[2] >> 2) & 4194303;
	des[4] = (src[2] >> 24) & 4194303;
	des[4] |= (src[3] << 8) & 4194303;
	des[5] = (src[3] >> 14) & 4194303;
	des[5] |= (src[4] << 18) & 4194303;
	des[6] = (src[4] >> 4) & 4194303;
	des[7] = (src[4] >> 26) & 4194303;
	des[7] |= (src[5] << 6) & 4194303;
	des[8] = (src[5] >> 16) & 4194303;
	des[8] |= (src[6] << 16) & 4194303;
	des[9] = (src[6] >> 6) & 4194303;
	des[10] = (src[6] >> 28) & 4194303;
	des[10] |= (src[7] << 4) & 4194303;
	des[11] = (src[7] >> 18) & 4194303;
	des[11] |= (src[8] << 14) & 4194303;
	des[12] = (src[8] >> 8) & 4194303;
	des[13] = (src[8] >> 30) & 4194303;
	des[13] |= (src[9] << 2) & 4194303;
	des[14] = (src[9] >> 20) & 4194303;
	des[14] |= (src[10] << 12) & 4194303;
	des[15] = (src[10] >> 10) & 4194303;
	des[16] = (src[11]) & 4194303;
	des[17] = (src[11] >> 22) & 4194303;
	des[17] |= (src[12] << 10) & 4194303;
	des[18] = (src[12] >> 12) & 4194303;
	des[18] |= (src[13] << 20) & 4194303;
	des[19] = (src[13] >> 2) & 4194303;
	des[20] = (src[13] >> 24) & 4194303;
	des[20] |= (src[14] << 8) & 4194303;
	des[21] = (src[14] >> 14) & 4194303;
	des[21] |= (src[15] << 18) & 4194303;
	des[22] = (src[15] >> 4) & 4194303;
	des[23] = (src[15] >> 26) & 4194303;
	des[23] |= (src[16] << 6) & 4194303;
	des[24] = (src[16] >> 16) & 4194303;
	des[24] |= (src[17] << 16) & 4194303;
	des[25] = (src[17] >> 6) & 4194303;
	des[26] = (src[17] >> 28) & 4194303;
	des[26] |= (src[18] << 4) & 4194303;
	des[27] = (src[18] >> 18) & 4194303;
	des[27] |= (src[19] << 14) & 4194303;
	des[28] = (src[19] >> 8) & 4194303;
	des[29] = (src[19] >> 30) & 4194303;
	des[29] |= (src[20] << 2) & 4194303;
	des[30] = (src[20] >> 20) & 4194303;
	des[30] |= (src[21] << 12) & 4194303;
	des[31] = (src[21] >> 10) & 4194303;
}

template<typename T>
void AFOR_unpack_32_23(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 8388607;
	des[1] = (src[0] >> 23) & 8388607;
	des[1] |= (src[1] << 9) & 8388607;
	des[2] = (src[1] >> 14) & 8388607;
	des[2] |= (src[2] << 18) & 8388607;
	des[3] = (src[2] >> 5) & 8388607;
	des[4] = (src[2] >> 28) & 8388607;
	des[4] |= (src[3] << 4) & 8388607;
	des[5] = (src[3] >> 19) & 8388607;
	des[5] |= (src[4] << 13) & 8388607;
	des[6] = (src[4] >> 10) & 8388607;
	des[6] |= (src[5] << 22) & 8388607;
	des[7] = (src[5] >> 1) & 8388607;
	des[8] = (src[5] >> 24) & 8388607;
	des[8] |= (src[6] << 8) & 8388607;
	des[9] = (src[6] >> 15) & 8388607;
	des[9] |= (src[7] << 17) & 8388607;
	des[10] = (src[7] >> 6) & 8388607;
	des[11] = (src[7] >> 29) & 8388607;
	des[11] |= (src[8] << 3) & 8388607;
	des[12] = (src[8] >> 20) & 8388607;
	des[12] |= (src[9] << 12) & 8388607;
	des[13] = (src[9] >> 11) & 8388607;
	des[13] |= (src[10] << 21) & 8388607;
	des[14] = (src[10] >> 2) & 8388607;
	des[15] = (src[10] >> 25) & 8388607;
	des[15] |= (src[11] << 7) & 8388607;
	des[16] = (src[11] >> 16) & 8388607;
	des[16] |= (src[12] << 16) & 8388607;
	des[17] = (src[12] >> 7) & 8388607;
	des[18] = (src[12] >> 30) & 8388607;
	des[18] |= (src[13] << 2) & 8388607;
	des[19] = (src[13] >> 21) & 8388607;
	des[19] |= (src[14] << 11) & 8388607;
	des[20] = (src[14] >> 12) & 8388607;
	des[20] |= (src[15] << 20) & 8388607;
	des[21] = (src[15] >> 3) & 8388607;
	des[22] = (src[15] >> 26) & 8388607;
	des[22] |= (src[16] << 6) & 8388607;
	des[23] = (src[16] >> 17) & 8388607;
	des[23] |= (src[17] << 15) & 8388607;
	des[24] = (src[17] >> 8) & 8388607;
	des[25] = (src[17] >> 31) & 8388607;
	des[25] |= (src[18] << 1) & 8388607;
	des[26] = (src[18] >> 22) & 8388607;
	des[26] |= (src[19] << 10) & 8388607;
	des[27] = (src[19] >> 13) & 8388607;
	des[27] |= (src[20] << 19) & 8388607;
	des[28] = (src[20] >> 4) & 8388607;
	des[29] = (src[20] >> 27) & 8388607;
	des[29] |= (src[21] << 5) & 8388607;
	des[30] = (src[21] >> 18) & 8388607;
	des[30] |= (src[22] << 14) & 8388607;
	des[31] = (src[22] >> 9) & 8388607;
}

template<typename T>
void AFOR_unpack_32_24(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 16777215;
	des[1] = (src[0] >> 24) & 16777215;
	des[1] |= (src[1] << 8) & 16777215;
	des[2] = (src[1] >> 16) & 16777215;
	des[2] |= (src[2] << 16) & 16777215;
	des[3] = (src[2] >> 8) & 16777215;
	des[4] = (src[3]) & 16777215;
	des[5] = (src[3] >> 24) & 16777215;
	des[5] |= (src[4] << 8) & 16777215;
	des[6] = (src[4] >> 16) & 16777215;
	des[6] |= (src[5] << 16) & 16777215;
	des[7] = (src[5] >> 8) & 16777215;
	des[8] = (src[6]) & 16777215;
	des[9] = (src[6] >> 24) & 16777215;
	des[9] |= (src[7] << 8) & 16777215;
	des[10] = (src[7] >> 16) & 16777215;
	des[10] |= (src[8] << 16) & 16777215;
	des[11] = (src[8] >> 8) & 16777215;
	des[12] = (src[9]) & 16777215;
	des[13] = (src[9] >> 24) & 16777215;
	des[13] |= (src[10] << 8) & 16777215;
	des[14] = (src[10] >> 16) & 16777215;
	des[14] |= (src[11] << 16) & 16777215;
	des[15] = (src[11] >> 8) & 16777215;
	des[16] = (src[12]) & 16777215;
	des[17] = (src[12] >> 24) & 16777215;
	des[17] |= (src[13] << 8) & 16777215;
	des[18] = (src[13] >> 16) & 16777215;
	des[18] |= (src[14] << 16) & 16777215;
	des[19] = (src[14] >> 8) & 16777215;
	des[20] = (src[15]) & 16777215;
	des[21] = (src[15] >> 24) & 16777215;
	des[21] |= (src[16] << 8) & 16777215;
	des[22] = (src[16] >> 16) & 16777215;
	des[22] |= (src[17] << 16) & 16777215;
	des[23] = (src[17] >> 8) & 16777215;
	des[24] = (src[18]) & 16777215;
	des[25] = (src[18] >> 24) & 16777215;
	des[25] |= (src[19] << 8) & 16777215;
	des[26] = (src[19] >> 16) & 16777215;
	des[26] |= (src[20] << 16) & 16777215;
	des[27] = (src[20] >> 8) & 16777215;
	des[28] = (src[21]) & 16777215;
	des[29] = (src[21] >> 24) & 16777215;
	des[29] |= (src[22] << 8) & 16777215;
	des[30] = (src[22] >> 16) & 16777215;
	des[30] |= (src[23] << 16) & 16777215;
	des[31] = (src[23] >> 8) & 16777215;
}

template<typename T>
void AFOR_unpack_32_25(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 33554431;
	des[1] = (src[0] >> 25) & 33554431;
	des[1] |= (src[1] << 7) & 33554431;
	des[2] = (src[1] >> 18) & 33554431;
	des[2] |= (src[2] << 14) & 33554431;
	des[3] = (src[2] >> 11) & 33554431;
	des[3] |= (src[3] << 21) & 33554431;
	des[4] = (src[3] >> 4) & 33554431;
	des[5] = (src[3] >> 29) & 33554431;
	des[5] |= (src[4] << 3) & 33554431;
	des[6] = (src[4] >> 22) & 33554431;
	des[6] |= (src[5] << 10) & 33554431;
	des[7] = (src[5] >> 15) & 33554431;
	des[7] |= (src[6] << 17) & 33554431;
	des[8] = (src[6] >> 8) & 33554431;
	des[8] |= (src[7] << 24) & 33554431;
	des[9] = (src[7] >> 1) & 33554431;
	des[10] = (src[7] >> 26) & 33554431;
	des[10] |= (src[8] << 6) & 33554431;
	des[11] = (src[8] >> 19) & 33554431;
	des[11] |= (src[9] << 13) & 33554431;
	des[12] = (src[9] >> 12) & 33554431;
	des[12] |= (src[10] << 20) & 33554431;
	des[13] = (src[10] >> 5) & 33554431;
	des[14] = (src[10] >> 30) & 33554431;
	des[14] |= (src[11] << 2) & 33554431;
	des[15] = (src[11] >> 23) & 33554431;
	des[15] |= (src[12] << 9) & 33554431;
	des[16] = (src[12] >> 16) & 33554431;
	des[16] |= (src[13] << 16) & 33554431;
	des[17] = (src[13] >> 9) & 33554431;
	des[17] |= (src[14] << 23) & 33554431;
	des[18] = (src[14] >> 2) & 33554431;
	des[19] = (src[14] >> 27) & 33554431;
	des[19] |= (src[15] << 5) & 33554431;
	des[20] = (src[15] >> 20) & 33554431;
	des[20] |= (src[16] << 12) & 33554431;
	des[21] = (src[16] >> 13) & 33554431;
	des[21] |= (src[17] << 19) & 33554431;
	des[22] = (src[17] >> 6) & 33554431;
	des[23] = (src[17] >> 31) & 33554431;
	des[23] |= (src[18] << 1) & 33554431;
	des[24] = (src[18] >> 24) & 33554431;
	des[24] |= (src[19] << 8) & 33554431;
	des[25] = (src[19] >> 17) & 33554431;
	des[25] |= (src[20] << 15) & 33554431;
	des[26] = (src[20] >> 10) & 33554431;
	des[26] |= (src[21] << 22) & 33554431;
	des[27] = (src[21] >> 3) & 33554431;
	des[28] = (src[21] >> 28) & 33554431;
	des[28] |= (src[22] << 4) & 33554431;
	des[29] = (src[22] >> 21) & 33554431;
	des[29] |= (src[23] << 11) & 33554431;
	des[30] = (src[23] >> 14) & 33554431;
	des[30] |= (src[24] << 18) & 33554431;
	des[31] = (src[24] >> 7) & 33554431;
}

template<typename T>
void AFOR_unpack_32_26(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 67108863;
	des[1] = (src[0] >> 26) & 67108863;
	des[1] |= (src[1] << 6) & 67108863;
	des[2] = (src[1] >> 20) & 67108863;
	des[2] |= (src[2] << 12) & 67108863;
	des[3] = (src[2] >> 14) & 67108863;
	des[3] |= (src[3] << 18) & 67108863;
	des[4] = (src[3] >> 8) & 67108863;
	des[4] |= (src[4] << 24) & 67108863;
	des[5] = (src[4] >> 2) & 67108863;
	des[6] = (src[4] >> 28) & 67108863;
	des[6] |= (src[5] << 4) & 67108863;
	des[7] = (src[5] >> 22) & 67108863;
	des[7] |= (src[6] << 10) & 67108863;
	des[8] = (src[6] >> 16) & 67108863;
	des[8] |= (src[7] << 16) & 67108863;
	des[9] = (src[7] >> 10) & 67108863;
	des[9] |= (src[8] << 22) & 67108863;
	des[10] = (src[8] >> 4) & 67108863;
	des[11] = (src[8] >> 30) & 67108863;
	des[11] |= (src[9] << 2) & 67108863;
	des[12] = (src[9] >> 24) & 67108863;
	des[12] |= (src[10] << 8) & 67108863;
	des[13] = (src[10] >> 18) & 67108863;
	des[13] |= (src[11] << 14) & 67108863;
	des[14] = (src[11] >> 12) & 67108863;
	des[14] |= (src[12] << 20) & 67108863;
	des[15] = (src[12] >> 6) & 67108863;
	des[16] = (src[13]) & 67108863;
	des[17] = (src[13] >> 26) & 67108863;
	des[17] |= (src[14] << 6) & 67108863;
	des[18] = (src[14] >> 20) & 67108863;
	des[18] |= (src[15] << 12) & 67108863;
	des[19] = (src[15] >> 14) & 67108863;
	des[19] |= (src[16] << 18) & 67108863;
	des[20] = (src[16] >> 8) & 67108863;
	des[20] |= (src[17] << 24) & 67108863;
	des[21] = (src[17] >> 2) & 67108863;
	des[22] = (src[17] >> 28) & 67108863;
	des[22] |= (src[18] << 4) & 67108863;
	des[23] = (src[18] >> 22) & 67108863;
	des[23] |= (src[19] << 10) & 67108863;
	des[24] = (src[19] >> 16) & 67108863;
	des[24] |= (src[20] << 16) & 67108863;
	des[25] = (src[20] >> 10) & 67108863;
	des[25] |= (src[21] << 22) & 67108863;
	des[26] = (src[21] >> 4) & 67108863;
	des[27] = (src[21] >> 30) & 67108863;
	des[27] |= (src[22] << 2) & 67108863;
	des[28] = (src[22] >> 24) & 67108863;
	des[28] |= (src[23] << 8) & 67108863;
	des[29] = (src[23] >> 18) & 67108863;
	des[29] |= (src[24] << 14) & 67108863;
	des[30] = (src[24] >> 12) & 67108863;
	des[30] |= (src[25] << 20) & 67108863;
	des[31] = (src[25] >> 6) & 67108863;
}

template<typename T>
void AFOR_unpack_32_27(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 134217727;
	des[1] = (src[0] >> 27) & 134217727;
	des[1] |= (src[1] << 5) & 134217727;
	des[2] = (src[1] >> 22) & 134217727;
	des[2] |= (src[2] << 10) & 134217727;
	des[3] = (src[2] >> 17) & 134217727;
	des[3] |= (src[3] << 15) & 134217727;
	des[4] = (src[3] >> 12) & 134217727;
	des[4] |= (src[4] << 20) & 134217727;
	des[5] = (src[4] >> 7) & 134217727;
	des[5] |= (src[5] << 25) & 134217727;
	des[6] = (src[5] >> 2) & 134217727;
	des[7] = (src[5] >> 29) & 134217727;
	des[7] |= (src[6] << 3) & 134217727;
	des[8] = (src[6] >> 24) & 134217727;
	des[8] |= (src[7] << 8) & 134217727;
	des[9] = (src[7] >> 19) & 134217727;
	des[9] |= (src[8] << 13) & 134217727;
	des[10] = (src[8] >> 14) & 134217727;
	des[10] |= (src[9] << 18) & 134217727;
	des[11] = (src[9] >> 9) & 134217727;
	des[11] |= (src[10] << 23) & 134217727;
	des[12] = (src[10] >> 4) & 134217727;
	des[13] = (src[10] >> 31) & 134217727;
	des[13] |= (src[11] << 1) & 134217727;
	des[14] = (src[11] >> 26) & 134217727;
	des[14] |= (src[12] << 6) & 134217727;
	des[15] = (src[12] >> 21) & 134217727;
	des[15] |= (src[13] << 11) & 134217727;
	des[16] = (src[13] >> 16) & 134217727;
	des[16] |= (src[14] << 16) & 134217727;
	des[17] = (src[14] >> 11) & 134217727;
	des[17] |= (src[15] << 21) & 134217727;
	des[18] = (src[15] >> 6) & 134217727;
	des[18] |= (src[16] << 26) & 134217727;
	des[19] = (src[16] >> 1) & 134217727;
	des[20] = (src[16] >> 28) & 134217727;
	des[20] |= (src[17] << 4) & 134217727;
	des[21] = (src[17] >> 23) & 134217727;
	des[21] |= (src[18] << 9) & 134217727;
	des[22] = (src[18] >> 18) & 134217727;
	des[22] |= (src[19] << 14) & 134217727;
	des[23] = (src[19] >> 13) & 134217727;
	des[23] |= (src[20] << 19) & 134217727;
	des[24] = (src[20] >> 8) & 134217727;
	des[24] |= (src[21] << 24) & 134217727;
	des[25] = (src[21] >> 3) & 134217727;
	des[26] = (src[21] >> 30) & 134217727;
	des[26] |= (src[22] << 2) & 134217727;
	des[27] = (src[22] >> 25) & 134217727;
	des[27] |= (src[23] << 7) & 134217727;
	des[28] = (src[23] >> 20) & 134217727;
	des[28] |= (src[24] << 12) & 134217727;
	des[29] = (src[24] >> 15) & 134217727;
	des[29] |= (src[25] << 17) & 134217727;
	des[30] = (src[25] >> 10) & 134217727;
	des[30] |= (src[26] << 22) & 134217727;
	des[31] = (src[26] >> 5) & 134217727;
}

template<typename T>
void AFOR_unpack_32_28(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 268435455;
	des[1] = (src[0] >> 28) & 268435455;
	des[1] |= (src[1] << 4) & 268435455;
	des[2] = (src[1] >> 24) & 268435455;
	des[2] |= (src[2] << 8) & 268435455;
	des[3] = (src[2] >> 20) & 268435455;
	des[3] |= (src[3] << 12) & 268435455;
	des[4] = (src[3] >> 16) & 268435455;
	des[4] |= (src[4] << 16) & 268435455;
	des[5] = (src[4] >> 12) & 268435455;
	des[5] |= (src[5] << 20) & 268435455;
	des[6] = (src[5] >> 8) & 268435455;
	des[6] |= (src[6] << 24) & 268435455;
	des[7] = (src[6] >> 4) & 268435455;
	des[8] = (src[7]) & 268435455;
	des[9] = (src[7] >> 28) & 268435455;
	des[9] |= (src[8] << 4) & 268435455;
	des[10] = (src[8] >> 24) & 268435455;
	des[10] |= (src[9] << 8) & 268435455;
	des[11] = (src[9] >> 20) & 268435455;
	des[11] |= (src[10] << 12) & 268435455;
	des[12] = (src[10] >> 16) & 268435455;
	des[12] |= (src[11] << 16) & 268435455;
	des[13] = (src[11] >> 12) & 268435455;
	des[13] |= (src[12] << 20) & 268435455;
	des[14] = (src[12] >> 8) & 268435455;
	des[14] |= (src[13] << 24) & 268435455;
	des[15] = (src[13] >> 4) & 268435455;
	des[16] = (src[14]) & 268435455;
	des[17] = (src[14] >> 28) & 268435455;
	des[17] |= (src[15] << 4) & 268435455;
	des[18] = (src[15] >> 24) & 268435455;
	des[18] |= (src[16] << 8) & 268435455;
	des[19] = (src[16] >> 20) & 268435455;
	des[19] |= (src[17] << 12) & 268435455;
	des[20] = (src[17] >> 16) & 268435455;
	des[20] |= (src[18] << 16) & 268435455;
	des[21] = (src[18] >> 12) & 268435455;
	des[21] |= (src[19] << 20) & 268435455;
	des[22] = (src[19] >> 8) & 268435455;
	des[22] |= (src[20] << 24) & 268435455;
	des[23] = (src[20] >> 4) & 268435455;
	des[24] = (src[21]) & 268435455;
	des[25] = (src[21] >> 28) & 268435455;
	des[25] |= (src[22] << 4) & 268435455;
	des[26] = (src[22] >> 24) & 268435455;
	des[26] |= (src[23] << 8) & 268435455;
	des[27] = (src[23] >> 20) & 268435455;
	des[27] |= (src[24] << 12) & 268435455;
	des[28] = (src[24] >> 16) & 268435455;
	des[28] |= (src[25] << 16) & 268435455;
	des[29] = (src[25] >> 12) & 268435455;
	des[29] |= (src[26] << 20) & 268435455;
	des[30] = (src[26] >> 8) & 268435455;
	des[30] |= (src[27] << 24) & 268435455;
	des[31] = (src[27] >> 4) & 268435455;
}

template<typename T>
void AFOR_unpack_32_29(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 536870911;
	des[1] = (src[0] >> 29) & 536870911;
	des[1] |= (src[1] << 3) & 536870911;
	des[2] = (src[1] >> 26) & 536870911;
	des[2] |= (src[2] << 6) & 536870911;
	des[3] = (src[2] >> 23) & 536870911;
	des[3] |= (src[3] << 9) & 536870911;
	des[4] = (src[3] >> 20) & 536870911;
	des[4] |= (src[4] << 12) & 536870911;
	des[5] = (src[4] >> 17) & 536870911;
	des[5] |= (src[5] << 15) & 536870911;
	des[6] = (src[5] >> 14) & 536870911;
	des[6] |= (src[6] << 18) & 536870911;
	des[7] = (src[6] >> 11) & 536870911;
	des[7] |= (src[7] << 21) & 536870911;
	des[8] = (src[7] >> 8) & 536870911;
	des[8] |= (src[8] << 24) & 536870911;
	des[9] = (src[8] >> 5) & 536870911;
	des[9] |= (src[9] << 27) & 536870911;
	des[10] = (src[9] >> 2) & 536870911;
	des[11] = (src[9] >> 31) & 536870911;
	des[11] |= (src[10] << 1) & 536870911;
	des[12] = (src[10] >> 28) & 536870911;
	des[12] |= (src[11] << 4) & 536870911;
	des[13] = (src[11] >> 25) & 536870911;
	des[13] |= (src[12] << 7) & 536870911;
	des[14] = (src[12] >> 22) & 536870911;
	des[14] |= (src[13] << 10) & 536870911;
	des[15] = (src[13] >> 19) & 536870911;
	des[15] |= (src[14] << 13) & 536870911;
	des[16] = (src[14] >> 16) & 536870911;
	des[16] |= (src[15] << 16) & 536870911;
	des[17] = (src[15] >> 13) & 536870911;
	des[17] |= (src[16] << 19) & 536870911;
	des[18] = (src[16] >> 10) & 536870911;
	des[18] |= (src[17] << 22) & 536870911;
	des[19] = (src[17] >> 7) & 536870911;
	des[19] |= (src[18] << 25) & 536870911;
	des[20] = (src[18] >> 4) & 536870911;
	des[20] |= (src[19] << 28) & 536870911;
	des[21] = (src[19] >> 1) & 536870911;
	des[22] = (src[19] >> 30) & 536870911;
	des[22] |= (src[20] << 2) & 536870911;
	des[23] = (src[20] >> 27) & 536870911;
	des[23] |= (src[21] << 5) & 536870911;
	des[24] = (src[21] >> 24) & 536870911;
	des[24] |= (src[22] << 8) & 536870911;
	des[25] = (src[22] >> 21) & 536870911;
	des[25] |= (src[23] << 11) & 536870911;
	des[26] = (src[23] >> 18) & 536870911;
	des[26] |= (src[24] << 14) & 536870911;
	des[27] = (src[24] >> 15) & 536870911;
	des[27] |= (src[25] << 17) & 536870911;
	des[28] = (src[25] >> 12) & 536870911;
	des[28] |= (src[26] << 20) & 536870911;
	des[29] = (src[26] >> 9) & 536870911;
	des[29] |= (src[27] << 23) & 536870911;
	des[30] = (src[27] >> 6) & 536870911;
	des[30] |= (src[28] << 26) & 536870911;
	des[31] = (src[28] >> 3) & 536870911;
}

template<typename T>
void AFOR_unpack_32_30(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 1073741823;
	des[1] = (src[0] >> 30) & 1073741823;
	des[1] |= (src[1] << 2) & 1073741823;
	des[2] = (src[1] >> 28) & 1073741823;
	des[2] |= (src[2] << 4) & 1073741823;
	des[3] = (src[2] >> 26) & 1073741823;
	des[3] |= (src[3] << 6) & 1073741823;
	des[4] = (src[3] >> 24) & 1073741823;
	des[4] |= (src[4] << 8) & 1073741823;
	des[5] = (src[4] >> 22) & 1073741823;
	des[5] |= (src[5] << 10) & 1073741823;
	des[6] = (src[5] >> 20) & 1073741823;
	des[6] |= (src[6] << 12) & 1073741823;
	des[7] = (src[6] >> 18) & 1073741823;
	des[7] |= (src[7] << 14) & 1073741823;
	des[8] = (src[7] >> 16) & 1073741823;
	des[8] |= (src[8] << 16) & 1073741823;
	des[9] = (src[8] >> 14) & 1073741823;
	des[9] |= (src[9] << 18) & 1073741823;
	des[10] = (src[9] >> 12) & 1073741823;
	des[10] |= (src[10] << 20) & 1073741823;
	des[11] = (src[10] >> 10) & 1073741823;
	des[11] |= (src[11] << 22) & 1073741823;
	des[12] = (src[11] >> 8) & 1073741823;
	des[12] |= (src[12] << 24) & 1073741823;
	des[13] = (src[12] >> 6) & 1073741823;
	des[13] |= (src[13] << 26) & 1073741823;
	des[14] = (src[13] >> 4) & 1073741823;
	des[14] |= (src[14] << 28) & 1073741823;
	des[15] = (src[14] >> 2) & 1073741823;
	des[16] = (src[15]) & 1073741823;
	des[17] = (src[15] >> 30) & 1073741823;
	des[17] |= (src[16] << 2) & 1073741823;
	des[18] = (src[16] >> 28) & 1073741823;
	des[18] |= (src[17] << 4) & 1073741823;
	des[19] = (src[17] >> 26) & 1073741823;
	des[19] |= (src[18] << 6) & 1073741823;
	des[20] = (src[18] >> 24) & 1073741823;
	des[20] |= (src[19] << 8) & 1073741823;
	des[21] = (src[19] >> 22) & 1073741823;
	des[21] |= (src[20] << 10) & 1073741823;
	des[22] = (src[20] >> 20) & 1073741823;
	des[22] |= (src[21] << 12) & 1073741823;
	des[23] = (src[21] >> 18) & 1073741823;
	des[23] |= (src[22] << 14) & 1073741823;
	des[24] = (src[22] >> 16) & 1073741823;
	des[24] |= (src[23] << 16) & 1073741823;
	des[25] = (src[23] >> 14) & 1073741823;
	des[25] |= (src[24] << 18) & 1073741823;
	des[26] = (src[24] >> 12) & 1073741823;
	des[26] |= (src[25] << 20) & 1073741823;
	des[27] = (src[25] >> 10) & 1073741823;
	des[27] |= (src[26] << 22) & 1073741823;
	des[28] = (src[26] >> 8) & 1073741823;
	des[28] |= (src[27] << 24) & 1073741823;
	des[29] = (src[27] >> 6) & 1073741823;
	des[29] |= (src[28] << 26) & 1073741823;
	des[30] = (src[28] >> 4) & 1073741823;
	des[30] |= (src[29] << 28) & 1073741823;
	des[31] = (src[29] >> 2) & 1073741823;
}

template<typename T>
void AFOR_unpack_32_31(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 2147483647;
	des[1] = (src[0] >> 31) & 2147483647;
	des[1] |= (src[1] << 1) & 2147483647;
	des[2] = (src[1] >> 30) & 2147483647;
	des[2] |= (src[2] << 2) & 2147483647;
	des[3] = (src[2] >> 29) & 2147483647;
	des[3] |= (src[3] << 3) & 2147483647;
	des[4] = (src[3] >> 28) & 2147483647;
	des[4] |= (src[4] << 4) & 2147483647;
	des[5] = (src[4] >> 27) & 2147483647;
	des[5] |= (src[5] << 5) & 2147483647;
	des[6] = (src[5] >> 26) & 2147483647;
	des[6] |= (src[6] << 6) & 2147483647;
	des[7] = (src[6] >> 25) & 2147483647;
	des[7] |= (src[7] << 7) & 2147483647;
	des[8] = (src[7] >> 24) & 2147483647;
	des[8] |= (src[8] << 8) & 2147483647;
	des[9] = (src[8] >> 23) & 2147483647;
	des[9] |= (src[9] << 9) & 2147483647;
	des[10] = (src[9] >> 22) & 2147483647;
	des[10] |= (src[10] << 10) & 2147483647;
	des[11] = (src[10] >> 21) & 2147483647;
	des[11] |= (src[11] << 11) & 2147483647;
	des[12] = (src[11] >> 20) & 2147483647;
	des[12] |= (src[12] << 12) & 2147483647;
	des[13] = (src[12] >> 19) & 2147483647;
	des[13] |= (src[13] << 13) & 2147483647;
	des[14] = (src[13] >> 18) & 2147483647;
	des[14] |= (src[14] << 14) & 2147483647;
	des[15] = (src[14] >> 17) & 2147483647;
	des[15] |= (src[15] << 15) & 2147483647;
	des[16] = (src[15] >> 16) & 2147483647;
	des[16] |= (src[16] << 16) & 2147483647;
	des[17] = (src[16] >> 15) & 2147483647;
	des[17] |= (src[17] << 17) & 2147483647;
	des[18] = (src[17] >> 14) & 2147483647;
	des[18] |= (src[18] << 18) & 2147483647;
	des[19] = (src[18] >> 13) & 2147483647;
	des[19] |= (src[19] << 19) & 2147483647;
	des[20] = (src[19] >> 12) & 2147483647;
	des[20] |= (src[20] << 20) & 2147483647;
	des[21] = (src[20] >> 11) & 2147483647;
	des[21] |= (src[21] << 21) & 2147483647;
	des[22] = (src[21] >> 10) & 2147483647;
	des[22] |= (src[22] << 22) & 2147483647;
	des[23] = (src[22] >> 9) & 2147483647;
	des[23] |= (src[23] << 23) & 2147483647;
	des[24] = (src[23] >> 8) & 2147483647;
	des[24] |= (src[24] << 24) & 2147483647;
	des[25] = (src[24] >> 7) & 2147483647;
	des[25] |= (src[25] << 25) & 2147483647;
	des[26] = (src[25] >> 6) & 2147483647;
	des[26] |= (src[26] << 26) & 2147483647;
	des[27] = (src[26] >> 5) & 2147483647;
	des[27] |= (src[27] << 27) & 2147483647;
	des[28] = (src[27] >> 4) & 2147483647;
	des[28] |= (src[28] << 28) & 2147483647;
	des[29] = (src[28] >> 3) & 2147483647;
	des[29] |= (src[29] << 29) & 2147483647;
	des[30] = (src[29] >> 2) & 2147483647;
	des[30] |= (src[30] << 30) & 2147483647;
	des[31] = (src[30] >> 1) & 2147483647;
}

template<typename T>
void AFOR_unpack_32_32(T * des, const uint32_t *src) {
	des[0] = (src[0]);
	des[1] = (src[1]);
	des[2] = (src[2]);
	des[3] = (src[3]);
	des[4] = (src[4]);
	des[5] = (src[5]);
	des[6] = (src[6]);
	des[7] = (src[7]);
	des[8] = (src[8]);
	des[9] = (src[9]);
	des[10] = (src[10]);
	des[11] = (src[11]);
	des[12] = (src[12]);
	des[13] = (src[13]);
	des[14] = (src[14]);
	des[15] = (src[15]);
	des[16] = (src[16]);
	des[17] = (src[17]);
	des[18] = (src[18]);
	des[19] = (src[19]);
	des[20] = (src[20]);
	des[21] = (src[21]);
	des[22] = (src[22]);
	des[23] = (src[23]);
	des[24] = (src[24]);
	des[25] = (src[25]);
	des[26] = (src[26]);
	des[27] = (src[27]);
	des[28] = (src[28]);
	des[29] = (src[29]);
	des[30] = (src[30]);
	des[31] = (src[31]);
}

template<typename T>
void AFOR_unpack_16_1(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 1;
	des[1] = (src[0] >> 1) & 1;
	des[2] = (src[0] >> 2) & 1;
	des[3] = (src[0] >> 3) & 1;
	des[4] = (src[0] >> 4) & 1;
	des[5] = (src[0] >> 5) & 1;
	des[6] = (src[0] >> 6) & 1;
	des[7] = (src[0] >> 7) & 1;
	des[8] = (src[0] >> 8) & 1;
	des[9] = (src[0] >> 9) & 1;
	des[10] = (src[0] >> 10) & 1;
	des[11] = (src[0] >> 11) & 1;
	des[12] = (src[0] >> 12) & 1;
	des[13] = (src[0] >> 13) & 1;
	des[14] = (src[0] >> 14) & 1;
	des[15] = (src[0] >> 15) & 1;
}

template<typename T>
void AFOR_unpack_16_2(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 3;
	des[1] = (src[0] >> 2) & 3;
	des[2] = (src[0] >> 4) & 3;
	des[3] = (src[0] >> 6) & 3;
	des[4] = (src[0] >> 8) & 3;
	des[5] = (src[0] >> 10) & 3;
	des[6] = (src[0] >> 12) & 3;
	des[7] = (src[0] >> 14) & 3;
	des[8] = (src[0] >> 16) & 3;
	des[9] = (src[0] >> 18) & 3;
	des[10] = (src[0] >> 20) & 3;
	des[11] = (src[0] >> 22) & 3;
	des[12] = (src[0] >> 24) & 3;
	des[13] = (src[0] >> 26) & 3;
	des[14] = (src[0] >> 28) & 3;
	des[15] = (src[0] >> 30) & 3;
}

template<typename T>
void AFOR_unpack_16_3(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 7;
	des[1] = (src[0] >> 3) & 7;
	des[2] = (src[0] >> 6) & 7;
	des[3] = (src[0] >> 9) & 7;
	des[4] = (src[0] >> 12) & 7;
	des[5] = (src[0] >> 15) & 7;
	des[6] = (src[0] >> 18) & 7;
	des[7] = (src[0] >> 21) & 7;
	des[8] = (src[0] >> 24) & 7;
	des[9] = (src[0] >> 27) & 7;
	des[10] = (src[0] >> 30) & 7;
	des[10] |= (src[1] << 2) & 7;
	des[11] = (src[1] >> 1) & 7;
	des[12] = (src[1] >> 4) & 7;
	des[13] = (src[1] >> 7) & 7;
	des[14] = (src[1] >> 10) & 7;
	des[15] = (src[1] >> 13) & 7;
}

template<typename T>
void AFOR_unpack_16_4(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 15;
	des[1] = (src[0] >> 4) & 15;
	des[2] = (src[0] >> 8) & 15;
	des[3] = (src[0] >> 12) & 15;
	des[4] = (src[0] >> 16) & 15;
	des[5] = (src[0] >> 20) & 15;
	des[6] = (src[0] >> 24) & 15;
	des[7] = (src[0] >> 28) & 15;
	des[8] = (src[1]) & 15;
	des[9] = (src[1] >> 4) & 15;
	des[10] = (src[1] >> 8) & 15;
	des[11] = (src[1] >> 12) & 15;
	des[12] = (src[1] >> 16) & 15;
	des[13] = (src[1] >> 20) & 15;
	des[14] = (src[1] >> 24) & 15;
	des[15] = (src[1] >> 28) & 15;
}

template<typename T>
void AFOR_unpack_16_5(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 31;
	des[1] = (src[0] >> 5) & 31;
	des[2] = (src[0] >> 10) & 31;
	des[3] = (src[0] >> 15) & 31;
	des[4] = (src[0] >> 20) & 31;
	des[5] = (src[0] >> 25) & 31;
	des[6] = (src[0] >> 30) & 31;
	des[6] |= (src[1] << 2) & 31;
	des[7] = (src[1] >> 3) & 31;
	des[8] = (src[1] >> 8) & 31;
	des[9] = (src[1] >> 13) & 31;
	des[10] = (src[1] >> 18) & 31;
	des[11] = (src[1] >> 23) & 31;
	des[12] = (src[1] >> 28) & 31;
	des[12] |= (src[2] << 4) & 31;
	des[13] = (src[2] >> 1) & 31;
	des[14] = (src[2] >> 6) & 31;
	des[15] = (src[2] >> 11) & 31;
}

template<typename T>
void AFOR_unpack_16_6(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 63;
	des[1] = (src[0] >> 6) & 63;
	des[2] = (src[0] >> 12) & 63;
	des[3] = (src[0] >> 18) & 63;
	des[4] = (src[0] >> 24) & 63;
	des[5] = (src[0] >> 30) & 63;
	des[5] |= (src[1] << 2) & 63;
	des[6] = (src[1] >> 4) & 63;
	des[7] = (src[1] >> 10) & 63;
	des[8] = (src[1] >> 16) & 63;
	des[9] = (src[1] >> 22) & 63;
	des[10] = (src[1] >> 28) & 63;
	des[10] |= (src[2] << 4) & 63;
	des[11] = (src[2] >> 2) & 63;
	des[12] = (src[2] >> 8) & 63;
	des[13] = (src[2] >> 14) & 63;
	des[14] = (src[2] >> 20) & 63;
	des[15] = (src[2] >> 26) & 63;
}

template<typename T>
void AFOR_unpack_16_7(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 127;
	des[1] = (src[0] >> 7) & 127;
	des[2] = (src[0] >> 14) & 127;
	des[3] = (src[0] >> 21) & 127;
	des[4] = (src[0] >> 28) & 127;
	des[4] |= (src[1] << 4) & 127;
	des[5] = (src[1] >> 3) & 127;
	des[6] = (src[1] >> 10) & 127;
	des[7] = (src[1] >> 17) & 127;
	des[8] = (src[1] >> 24) & 127;
	des[9] = (src[1] >> 31) & 127;
	des[9] |= (src[2] << 1) & 127;
	des[10] = (src[2] >> 6) & 127;
	des[11] = (src[2] >> 13) & 127;
	des[12] = (src[2] >> 20) & 127;
	des[13] = (src[2] >> 27) & 127;
	des[13] |= (src[3] << 5) & 127;
	des[14] = (src[3] >> 2) & 127;
	des[15] = (src[3] >> 9) & 127;
}

template<typename T>
void AFOR_unpack_16_8(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 255;
	des[1] = (src[0] >> 8) & 255;
	des[2] = (src[0] >> 16) & 255;
	des[3] = (src[0] >> 24) & 255;
	des[4] = (src[1]) & 255;
	des[5] = (src[1] >> 8) & 255;
	des[6] = (src[1] >> 16) & 255;
	des[7] = (src[1] >> 24) & 255;
	des[8] = (src[2]) & 255;
	des[9] = (src[2] >> 8) & 255;
	des[10] = (src[2] >> 16) & 255;
	des[11] = (src[2] >> 24) & 255;
	des[12] = (src[3]) & 255;
	des[13] = (src[3] >> 8) & 255;
	des[14] = (src[3] >> 16) & 255;
	des[15] = (src[3] >> 24) & 255;
}

template<typename T>
void AFOR_unpack_16_9(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 511;
	des[1] = (src[0] >> 9) & 511;
	des[2] = (src[0] >> 18) & 511;
	des[3] = (src[0] >> 27) & 511;
	des[3] |= (src[1] << 5) & 511;
	des[4] = (src[1] >> 4) & 511;
	des[5] = (src[1] >> 13) & 511;
	des[6] = (src[1] >> 22) & 511;
	des[7] = (src[1] >> 31) & 511;
	des[7] |= (src[2] << 1) & 511;
	des[8] = (src[2] >> 8) & 511;
	des[9] = (src[2] >> 17) & 511;
	des[10] = (src[2] >> 26) & 511;
	des[10] |= (src[3] << 6) & 511;
	des[11] = (src[3] >> 3) & 511;
	des[12] = (src[3] >> 12) & 511;
	des[13] = (src[3] >> 21) & 511;
	des[14] = (src[3] >> 30) & 511;
	des[14] |= (src[4] << 2) & 511;
	des[15] = (src[4] >> 7) & 511;
}

template<typename T>
void AFOR_unpack_16_10(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 1023;
	des[1] = (src[0] >> 10) & 1023;
	des[2] = (src[0] >> 20) & 1023;
	des[3] = (src[0] >> 30) & 1023;
	des[3] |= (src[1] << 2) & 1023;
	des[4] = (src[1] >> 8) & 1023;
	des[5] = (src[1] >> 18) & 1023;
	des[6] = (src[1] >> 28) & 1023;
	des[6] |= (src[2] << 4) & 1023;
	des[7] = (src[2] >> 6) & 1023;
	des[8] = (src[2] >> 16) & 1023;
	des[9] = (src[2] >> 26) & 1023;
	des[9] |= (src[3] << 6) & 1023;
	des[10] = (src[3] >> 4) & 1023;
	des[11] = (src[3] >> 14) & 1023;
	des[12] = (src[3] >> 24) & 1023;
	des[12] |= (src[4] << 8) & 1023;
	des[13] = (src[4] >> 2) & 1023;
	des[14] = (src[4] >> 12) & 1023;
	des[15] = (src[4] >> 22) & 1023;
}

template<typename T>
void AFOR_unpack_16_11(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 2047;
	des[1] = (src[0] >> 11) & 2047;
	des[2] = (src[0] >> 22) & 2047;
	des[2] |= (src[1] << 10) & 2047;
	des[3] = (src[1] >> 1) & 2047;
	des[4] = (src[1] >> 12) & 2047;
	des[5] = (src[1] >> 23) & 2047;
	des[5] |= (src[2] << 9) & 2047;
	des[6] = (src[2] >> 2) & 2047;
	des[7] = (src[2] >> 13) & 2047;
	des[8] = (src[2] >> 24) & 2047;
	des[8] |= (src[3] << 8) & 2047;
	des[9] = (src[3] >> 3) & 2047;
	des[10] = (src[3] >> 14) & 2047;
	des[11] = (src[3] >> 25) & 2047;
	des[11] |= (src[4] << 7) & 2047;
	des[12] = (src[4] >> 4) & 2047;
	des[13] = (src[4] >> 15) & 2047;
	des[14] = (src[4] >> 26) & 2047;
	des[14] |= (src[5] << 6) & 2047;
	des[15] = (src[5] >> 5) & 2047;
}

template<typename T>
void AFOR_unpack_16_12(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 4095;
	des[1] = (src[0] >> 12) & 4095;
	des[2] = (src[0] >> 24) & 4095;
	des[2] |= (src[1] << 8) & 4095;
	des[3] = (src[1] >> 4) & 4095;
	des[4] = (src[1] >> 16) & 4095;
	des[5] = (src[1] >> 28) & 4095;
	des[5] |= (src[2] << 4) & 4095;
	des[6] = (src[2] >> 8) & 4095;
	des[7] = (src[2] >> 20) & 4095;
	des[8] = (src[3]) & 4095;
	des[9] = (src[3] >> 12) & 4095;
	des[10] = (src[3] >> 24) & 4095;
	des[10] |= (src[4] << 8) & 4095;
	des[11] = (src[4] >> 4) & 4095;
	des[12] = (src[4] >> 16) & 4095;
	des[13] = (src[4] >> 28) & 4095;
	des[13] |= (src[5] << 4) & 4095;
	des[14] = (src[5] >> 8) & 4095;
	des[15] = (src[5] >> 20) & 4095;
}

template<typename T>
void AFOR_unpack_16_13(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 8191;
	des[1] = (src[0] >> 13) & 8191;
	des[2] = (src[0] >> 26) & 8191;
	des[2] |= (src[1] << 6) & 8191;
	des[3] = (src[1] >> 7) & 8191;
	des[4] = (src[1] >> 20) & 8191;
	des[4] |= (src[2] << 12) & 8191;
	des[5] = (src[2] >> 1) & 8191;
	des[6] = (src[2] >> 14) & 8191;
	des[7] = (src[2] >> 27) & 8191;
	des[7] |= (src[3] << 5) & 8191;
	des[8] = (src[3] >> 8) & 8191;
	des[9] = (src[3] >> 21) & 8191;
	des[9] |= (src[4] << 11) & 8191;
	des[10] = (src[4] >> 2) & 8191;
	des[11] = (src[4] >> 15) & 8191;
	des[12] = (src[4] >> 28) & 8191;
	des[12] |= (src[5] << 4) & 8191;
	des[13] = (src[5] >> 9) & 8191;
	des[14] = (src[5] >> 22) & 8191;
	des[14] |= (src[6] << 10) & 8191;
	des[15] = (src[6] >> 3) & 8191;
}

template<typename T>
void AFOR_unpack_16_14(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 16383;
	des[1] = (src[0] >> 14) & 16383;
	des[2] = (src[0] >> 28) & 16383;
	des[2] |= (src[1] << 4) & 16383;
	des[3] = (src[1] >> 10) & 16383;
	des[4] = (src[1] >> 24) & 16383;
	des[4] |= (src[2] << 8) & 16383;
	des[5] = (src[2] >> 6) & 16383;
	des[6] = (src[2] >> 20) & 16383;
	des[6] |= (src[3] << 12) & 16383;
	des[7] = (src[3] >> 2) & 16383;
	des[8] = (src[3] >> 16) & 16383;
	des[9] = (src[3] >> 30) & 16383;
	des[9] |= (src[4] << 2) & 16383;
	des[10] = (src[4] >> 12) & 16383;
	des[11] = (src[4] >> 26) & 16383;
	des[11] |= (src[5] << 6) & 16383;
	des[12] = (src[5] >> 8) & 16383;
	des[13] = (src[5] >> 22) & 16383;
	des[13] |= (src[6] << 10) & 16383;
	des[14] = (src[6] >> 4) & 16383;
	des[15] = (src[6] >> 18) & 16383;
}

template<typename T>
void AFOR_unpack_16_15(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 32767;
	des[1] = (src[0] >> 15) & 32767;
	des[2] = (src[0] >> 30) & 32767;
	des[2] |= (src[1] << 2) & 32767;
	des[3] = (src[1] >> 13) & 32767;
	des[4] = (src[1] >> 28) & 32767;
	des[4] |= (src[2] << 4) & 32767;
	des[5] = (src[2] >> 11) & 32767;
	des[6] = (src[2] >> 26) & 32767;
	des[6] |= (src[3] << 6) & 32767;
	des[7] = (src[3] >> 9) & 32767;
	des[8] = (src[3] >> 24) & 32767;
	des[8] |= (src[4] << 8) & 32767;
	des[9] = (src[4] >> 7) & 32767;
	des[10] = (src[4] >> 22) & 32767;
	des[10] |= (src[5] << 10) & 32767;
	des[11] = (src[5] >> 5) & 32767;
	des[12] = (src[5] >> 20) & 32767;
	des[12] |= (src[6] << 12) & 32767;
	des[13] = (src[6] >> 3) & 32767;
	des[14] = (src[6] >> 18) & 32767;
	des[14] |= (src[7] << 14) & 32767;
	des[15] = (src[7] >> 1) & 32767;
}

template<typename T>
void AFOR_unpack_16_16(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 65535;
	des[1] = (src[0] >> 16) & 65535;
	des[2] = (src[1]) & 65535;
	des[3] = (src[1] >> 16) & 65535;
	des[4] = (src[2]) & 65535;
	des[5] = (src[2] >> 16) & 65535;
	des[6] = (src[3]) & 65535;
	des[7] = (src[3] >> 16) & 65535;
	des[8] = (src[4]) & 65535;
	des[9] = (src[4] >> 16) & 65535;
	des[10] = (src[5]) & 65535;
	des[11] = (src[5] >> 16) & 65535;
	des[12] = (src[6]) & 65535;
	des[13] = (src[6] >> 16) & 65535;
	des[14] = (src[7]) & 65535;
	des[15] = (src[7] >> 16) & 65535;
}

template<typename T>
void AFOR_unpack_16_17(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 131071;
	des[1] = (src[0] >> 17) & 131071;
	des[1] |= (src[1] << 15) & 131071;
	des[2] = (src[1] >> 2) & 131071;
	des[3] = (src[1] >> 19) & 131071;
	des[3] |= (src[2] << 13) & 131071;
	des[4] = (src[2] >> 4) & 131071;
	des[5] = (src[2] >> 21) & 131071;
	des[5] |= (src[3] << 11) & 131071;
	des[6] = (src[3] >> 6) & 131071;
	des[7] = (src[3] >> 23) & 131071;
	des[7] |= (src[4] << 9) & 131071;
	des[8] = (src[4] >> 8) & 131071;
	des[9] = (src[4] >> 25) & 131071;
	des[9] |= (src[5] << 7) & 131071;
	des[10] = (src[5] >> 10) & 131071;
	des[11] = (src[5] >> 27) & 131071;
	des[11] |= (src[6] << 5) & 131071;
	des[12] = (src[6] >> 12) & 131071;
	des[13] = (src[6] >> 29) & 131071;
	des[13] |= (src[7] << 3) & 131071;
	des[14] = (src[7] >> 14) & 131071;
	des[15] = (src[7] >> 31) & 131071;
	des[15] |= (src[8] << 1) & 131071;
}

template<typename T>
void AFOR_unpack_16_18(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 262143;
	des[1] = (src[0] >> 18) & 262143;
	des[1] |= (src[1] << 14) & 262143;
	des[2] = (src[1] >> 4) & 262143;
	des[3] = (src[1] >> 22) & 262143;
	des[3] |= (src[2] << 10) & 262143;
	des[4] = (src[2] >> 8) & 262143;
	des[5] = (src[2] >> 26) & 262143;
	des[5] |= (src[3] << 6) & 262143;
	des[6] = (src[3] >> 12) & 262143;
	des[7] = (src[3] >> 30) & 262143;
	des[7] |= (src[4] << 2) & 262143;
	des[8] = (src[4] >> 16) & 262143;
	des[8] |= (src[5] << 16) & 262143;
	des[9] = (src[5] >> 2) & 262143;
	des[10] = (src[5] >> 20) & 262143;
	des[10] |= (src[6] << 12) & 262143;
	des[11] = (src[6] >> 6) & 262143;
	des[12] = (src[6] >> 24) & 262143;
	des[12] |= (src[7] << 8) & 262143;
	des[13] = (src[7] >> 10) & 262143;
	des[14] = (src[7] >> 28) & 262143;
	des[14] |= (src[8] << 4) & 262143;
	des[15] = (src[8] >> 14) & 262143;
}

template<typename T>
void AFOR_unpack_16_19(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 524287;
	des[1] = (src[0] >> 19) & 524287;
	des[1] |= (src[1] << 13) & 524287;
	des[2] = (src[1] >> 6) & 524287;
	des[3] = (src[1] >> 25) & 524287;
	des[3] |= (src[2] << 7) & 524287;
	des[4] = (src[2] >> 12) & 524287;
	des[5] = (src[2] >> 31) & 524287;
	des[5] |= (src[3] << 1) & 524287;
	des[6] = (src[3] >> 18) & 524287;
	des[6] |= (src[4] << 14) & 524287;
	des[7] = (src[4] >> 5) & 524287;
	des[8] = (src[4] >> 24) & 524287;
	des[8] |= (src[5] << 8) & 524287;
	des[9] = (src[5] >> 11) & 524287;
	des[10] = (src[5] >> 30) & 524287;
	des[10] |= (src[6] << 2) & 524287;
	des[11] = (src[6] >> 17) & 524287;
	des[11] |= (src[7] << 15) & 524287;
	des[12] = (src[7] >> 4) & 524287;
	des[13] = (src[7] >> 23) & 524287;
	des[13] |= (src[8] << 9) & 524287;
	des[14] = (src[8] >> 10) & 524287;
	des[15] = (src[8] >> 29) & 524287;
	des[15] |= (src[9] << 3) & 524287;
}

template<typename T>
void AFOR_unpack_16_20(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 1048575;
	des[1] = (src[0] >> 20) & 1048575;
	des[1] |= (src[1] << 12) & 1048575;
	des[2] = (src[1] >> 8) & 1048575;
	des[3] = (src[1] >> 28) & 1048575;
	des[3] |= (src[2] << 4) & 1048575;
	des[4] = (src[2] >> 16) & 1048575;
	des[4] |= (src[3] << 16) & 1048575;
	des[5] = (src[3] >> 4) & 1048575;
	des[6] = (src[3] >> 24) & 1048575;
	des[6] |= (src[4] << 8) & 1048575;
	des[7] = (src[4] >> 12) & 1048575;
	des[8] = (src[5]) & 1048575;
	des[9] = (src[5] >> 20) & 1048575;
	des[9] |= (src[6] << 12) & 1048575;
	des[10] = (src[6] >> 8) & 1048575;
	des[11] = (src[6] >> 28) & 1048575;
	des[11] |= (src[7] << 4) & 1048575;
	des[12] = (src[7] >> 16) & 1048575;
	des[12] |= (src[8] << 16) & 1048575;
	des[13] = (src[8] >> 4) & 1048575;
	des[14] = (src[8] >> 24) & 1048575;
	des[14] |= (src[9] << 8) & 1048575;
	des[15] = (src[9] >> 12) & 1048575;
}

template<typename T>
void AFOR_unpack_16_21(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 2097151;
	des[1] = (src[0] >> 21) & 2097151;
	des[1] |= (src[1] << 11) & 2097151;
	des[2] = (src[1] >> 10) & 2097151;
	des[3] = (src[1] >> 31) & 2097151;
	des[3] |= (src[2] << 1) & 2097151;
	des[4] = (src[2] >> 20) & 2097151;
	des[4] |= (src[3] << 12) & 2097151;
	des[5] = (src[3] >> 9) & 2097151;
	des[6] = (src[3] >> 30) & 2097151;
	des[6] |= (src[4] << 2) & 2097151;
	des[7] = (src[4] >> 19) & 2097151;
	des[7] |= (src[5] << 13) & 2097151;
	des[8] = (src[5] >> 8) & 2097151;
	des[9] = (src[5] >> 29) & 2097151;
	des[9] |= (src[6] << 3) & 2097151;
	des[10] = (src[6] >> 18) & 2097151;
	des[10] |= (src[7] << 14) & 2097151;
	des[11] = (src[7] >> 7) & 2097151;
	des[12] = (src[7] >> 28) & 2097151;
	des[12] |= (src[8] << 4) & 2097151;
	des[13] = (src[8] >> 17) & 2097151;
	des[13] |= (src[9] << 15) & 2097151;
	des[14] = (src[9] >> 6) & 2097151;
	des[15] = (src[9] >> 27) & 2097151;
	des[15] |= (src[10] << 5) & 2097151;
}

template<typename T>
void AFOR_unpack_16_22(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 4194303;
	des[1] = (src[0] >> 22) & 4194303;
	des[1] |= (src[1] << 10) & 4194303;
	des[2] = (src[1] >> 12) & 4194303;
	des[2] |= (src[2] << 20) & 4194303;
	des[3] = (src[2] >> 2) & 4194303;
	des[4] = (src[2] >> 24) & 4194303;
	des[4] |= (src[3] << 8) & 4194303;
	des[5] = (src[3] >> 14) & 4194303;
	des[5] |= (src[4] << 18) & 4194303;
	des[6] = (src[4] >> 4) & 4194303;
	des[7] = (src[4] >> 26) & 4194303;
	des[7] |= (src[5] << 6) & 4194303;
	des[8] = (src[5] >> 16) & 4194303;
	des[8] |= (src[6] << 16) & 4194303;
	des[9] = (src[6] >> 6) & 4194303;
	des[10] = (src[6] >> 28) & 4194303;
	des[10] |= (src[7] << 4) & 4194303;
	des[11] = (src[7] >> 18) & 4194303;
	des[11] |= (src[8] << 14) & 4194303;
	des[12] = (src[8] >> 8) & 4194303;
	des[13] = (src[8] >> 30) & 4194303;
	des[13] |= (src[9] << 2) & 4194303;
	des[14] = (src[9] >> 20) & 4194303;
	des[14] |= (src[10] << 12) & 4194303;
	des[15] = (src[10] >> 10) & 4194303;
}

template<typename T>
void AFOR_unpack_16_23(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 8388607;
	des[1] = (src[0] >> 23) & 8388607;
	des[1] |= (src[1] << 9) & 8388607;
	des[2] = (src[1] >> 14) & 8388607;
	des[2] |= (src[2] << 18) & 8388607;
	des[3] = (src[2] >> 5) & 8388607;
	des[4] = (src[2] >> 28) & 8388607;
	des[4] |= (src[3] << 4) & 8388607;
	des[5] = (src[3] >> 19) & 8388607;
	des[5] |= (src[4] << 13) & 8388607;
	des[6] = (src[4] >> 10) & 8388607;
	des[6] |= (src[5] << 22) & 8388607;
	des[7] = (src[5] >> 1) & 8388607;
	des[8] = (src[5] >> 24) & 8388607;
	des[8] |= (src[6] << 8) & 8388607;
	des[9] = (src[6] >> 15) & 8388607;
	des[9] |= (src[7] << 17) & 8388607;
	des[10] = (src[7] >> 6) & 8388607;
	des[11] = (src[7] >> 29) & 8388607;
	des[11] |= (src[8] << 3) & 8388607;
	des[12] = (src[8] >> 20) & 8388607;
	des[12] |= (src[9] << 12) & 8388607;
	des[13] = (src[9] >> 11) & 8388607;
	des[13] |= (src[10] << 21) & 8388607;
	des[14] = (src[10] >> 2) & 8388607;
	des[15] = (src[10] >> 25) & 8388607;
	des[15] |= (src[11] << 7) & 8388607;
}

template<typename T>
void AFOR_unpack_16_24(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 16777215;
	des[1] = (src[0] >> 24) & 16777215;
	des[1] |= (src[1] << 8) & 16777215;
	des[2] = (src[1] >> 16) & 16777215;
	des[2] |= (src[2] << 16) & 16777215;
	des[3] = (src[2] >> 8) & 16777215;
	des[4] = (src[3]) & 16777215;
	des[5] = (src[3] >> 24) & 16777215;
	des[5] |= (src[4] << 8) & 16777215;
	des[6] = (src[4] >> 16) & 16777215;
	des[6] |= (src[5] << 16) & 16777215;
	des[7] = (src[5] >> 8) & 16777215;
	des[8] = (src[6]) & 16777215;
	des[9] = (src[6] >> 24) & 16777215;
	des[9] |= (src[7] << 8) & 16777215;
	des[10] = (src[7] >> 16) & 16777215;
	des[10] |= (src[8] << 16) & 16777215;
	des[11] = (src[8] >> 8) & 16777215;
	des[12] = (src[9]) & 16777215;
	des[13] = (src[9] >> 24) & 16777215;
	des[13] |= (src[10] << 8) & 16777215;
	des[14] = (src[10] >> 16) & 16777215;
	des[14] |= (src[11] << 16) & 16777215;
	des[15] = (src[11] >> 8) & 16777215;
}

template<typename T>
void AFOR_unpack_16_25(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 33554431;
	des[1] = (src[0] >> 25) & 33554431;
	des[1] |= (src[1] << 7) & 33554431;
	des[2] = (src[1] >> 18) & 33554431;
	des[2] |= (src[2] << 14) & 33554431;
	des[3] = (src[2] >> 11) & 33554431;
	des[3] |= (src[3] << 21) & 33554431;
	des[4] = (src[3] >> 4) & 33554431;
	des[5] = (src[3] >> 29) & 33554431;
	des[5] |= (src[4] << 3) & 33554431;
	des[6] = (src[4] >> 22) & 33554431;
	des[6] |= (src[5] << 10) & 33554431;
	des[7] = (src[5] >> 15) & 33554431;
	des[7] |= (src[6] << 17) & 33554431;
	des[8] = (src[6] >> 8) & 33554431;
	des[8] |= (src[7] << 24) & 33554431;
	des[9] = (src[7] >> 1) & 33554431;
	des[10] = (src[7] >> 26) & 33554431;
	des[10] |= (src[8] << 6) & 33554431;
	des[11] = (src[8] >> 19) & 33554431;
	des[11] |= (src[9] << 13) & 33554431;
	des[12] = (src[9] >> 12) & 33554431;
	des[12] |= (src[10] << 20) & 33554431;
	des[13] = (src[10] >> 5) & 33554431;
	des[14] = (src[10] >> 30) & 33554431;
	des[14] |= (src[11] << 2) & 33554431;
	des[15] = (src[11] >> 23) & 33554431;
	des[15] |= (src[12] << 9) & 33554431;
}

template<typename T>
void AFOR_unpack_16_26(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 67108863;
	des[1] = (src[0] >> 26) & 67108863;
	des[1] |= (src[1] << 6) & 67108863;
	des[2] = (src[1] >> 20) & 67108863;
	des[2] |= (src[2] << 12) & 67108863;
	des[3] = (src[2] >> 14) & 67108863;
	des[3] |= (src[3] << 18) & 67108863;
	des[4] = (src[3] >> 8) & 67108863;
	des[4] |= (src[4] << 24) & 67108863;
	des[5] = (src[4] >> 2) & 67108863;
	des[6] = (src[4] >> 28) & 67108863;
	des[6] |= (src[5] << 4) & 67108863;
	des[7] = (src[5] >> 22) & 67108863;
	des[7] |= (src[6] << 10) & 67108863;
	des[8] = (src[6] >> 16) & 67108863;
	des[8] |= (src[7] << 16) & 67108863;
	des[9] = (src[7] >> 10) & 67108863;
	des[9] |= (src[8] << 22) & 67108863;
	des[10] = (src[8] >> 4) & 67108863;
	des[11] = (src[8] >> 30) & 67108863;
	des[11] |= (src[9] << 2) & 67108863;
	des[12] = (src[9] >> 24) & 67108863;
	des[12] |= (src[10] << 8) & 67108863;
	des[13] = (src[10] >> 18) & 67108863;
	des[13] |= (src[11] << 14) & 67108863;
	des[14] = (src[11] >> 12) & 67108863;
	des[14] |= (src[12] << 20) & 67108863;
	des[15] = (src[12] >> 6) & 67108863;
}

template<typename T>
void AFOR_unpack_16_27(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 134217727;
	des[1] = (src[0] >> 27) & 134217727;
	des[1] |= (src[1] << 5) & 134217727;
	des[2] = (src[1] >> 22) & 134217727;
	des[2] |= (src[2] << 10) & 134217727;
	des[3] = (src[2] >> 17) & 134217727;
	des[3] |= (src[3] << 15) & 134217727;
	des[4] = (src[3] >> 12) & 134217727;
	des[4] |= (src[4] << 20) & 134217727;
	des[5] = (src[4] >> 7) & 134217727;
	des[5] |= (src[5] << 25) & 134217727;
	des[6] = (src[5] >> 2) & 134217727;
	des[7] = (src[5] >> 29) & 134217727;
	des[7] |= (src[6] << 3) & 134217727;
	des[8] = (src[6] >> 24) & 134217727;
	des[8] |= (src[7] << 8) & 134217727;
	des[9] = (src[7] >> 19) & 134217727;
	des[9] |= (src[8] << 13) & 134217727;
	des[10] = (src[8] >> 14) & 134217727;
	des[10] |= (src[9] << 18) & 134217727;
	des[11] = (src[9] >> 9) & 134217727;
	des[11] |= (src[10] << 23) & 134217727;
	des[12] = (src[10] >> 4) & 134217727;
	des[13] = (src[10] >> 31) & 134217727;
	des[13] |= (src[11] << 1) & 134217727;
	des[14] = (src[11] >> 26) & 134217727;
	des[14] |= (src[12] << 6) & 134217727;
	des[15] = (src[12] >> 21) & 134217727;
	des[15] |= (src[13] << 11) & 134217727;
}

template<typename T>
void AFOR_unpack_16_28(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 268435455;
	des[1] = (src[0] >> 28) & 268435455;
	des[1] |= (src[1] << 4) & 268435455;
	des[2] = (src[1] >> 24) & 268435455;
	des[2] |= (src[2] << 8) & 268435455;
	des[3] = (src[2] >> 20) & 268435455;
	des[3] |= (src[3] << 12) & 268435455;
	des[4] = (src[3] >> 16) & 268435455;
	des[4] |= (src[4] << 16) & 268435455;
	des[5] = (src[4] >> 12) & 268435455;
	des[5] |= (src[5] << 20) & 268435455;
	des[6] = (src[5] >> 8) & 268435455;
	des[6] |= (src[6] << 24) & 268435455;
	des[7] = (src[6] >> 4) & 268435455;
	des[8] = (src[7]) & 268435455;
	des[9] = (src[7] >> 28) & 268435455;
	des[9] |= (src[8] << 4) & 268435455;
	des[10] = (src[8] >> 24) & 268435455;
	des[10] |= (src[9] << 8) & 268435455;
	des[11] = (src[9] >> 20) & 268435455;
	des[11] |= (src[10] << 12) & 268435455;
	des[12] = (src[10] >> 16) & 268435455;
	des[12] |= (src[11] << 16) & 268435455;
	des[13] = (src[11] >> 12) & 268435455;
	des[13] |= (src[12] << 20) & 268435455;
	des[14] = (src[12] >> 8) & 268435455;
	des[14] |= (src[13] << 24) & 268435455;
	des[15] = (src[13] >> 4) & 268435455;
}

template<typename T>
void AFOR_unpack_16_29(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 536870911;
	des[1] = (src[0] >> 29) & 536870911;
	des[1] |= (src[1] << 3) & 536870911;
	des[2] = (src[1] >> 26) & 536870911;
	des[2] |= (src[2] << 6) & 536870911;
	des[3] = (src[2] >> 23) & 536870911;
	des[3] |= (src[3] << 9) & 536870911;
	des[4] = (src[3] >> 20) & 536870911;
	des[4] |= (src[4] << 12) & 536870911;
	des[5] = (src[4] >> 17) & 536870911;
	des[5] |= (src[5] << 15) & 536870911;
	des[6] = (src[5] >> 14) & 536870911;
	des[6] |= (src[6] << 18) & 536870911;
	des[7] = (src[6] >> 11) & 536870911;
	des[7] |= (src[7] << 21) & 536870911;
	des[8] = (src[7] >> 8) & 536870911;
	des[8] |= (src[8] << 24) & 536870911;
	des[9] = (src[8] >> 5) & 536870911;
	des[9] |= (src[9] << 27) & 536870911;
	des[10] = (src[9] >> 2) & 536870911;
	des[11] = (src[9] >> 31) & 536870911;
	des[11] |= (src[10] << 1) & 536870911;
	des[12] = (src[10] >> 28) & 536870911;
	des[12] |= (src[11] << 4) & 536870911;
	des[13] = (src[11] >> 25) & 536870911;
	des[13] |= (src[12] << 7) & 536870911;
	des[14] = (src[12] >> 22) & 536870911;
	des[14] |= (src[13] << 10) & 536870911;
	des[15] = (src[13] >> 19) & 536870911;
	des[15] |= (src[14] << 13) & 536870911;
}

template<typename T>
void AFOR_unpack_16_30(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 1073741823;
	des[1] = (src[0] >> 30) & 1073741823;
	des[1] |= (src[1] << 2) & 1073741823;
	des[2] = (src[1] >> 28) & 1073741823;
	des[2] |= (src[2] << 4) & 1073741823;
	des[3] = (src[2] >> 26) & 1073741823;
	des[3] |= (src[3] << 6) & 1073741823;
	des[4] = (src[3] >> 24) & 1073741823;
	des[4] |= (src[4] << 8) & 1073741823;
	des[5] = (src[4] >> 22) & 1073741823;
	des[5] |= (src[5] << 10) & 1073741823;
	des[6] = (src[5] >> 20) & 1073741823;
	des[6] |= (src[6] << 12) & 1073741823;
	des[7] = (src[6] >> 18) & 1073741823;
	des[7] |= (src[7] << 14) & 1073741823;
	des[8] = (src[7] >> 16) & 1073741823;
	des[8] |= (src[8] << 16) & 1073741823;
	des[9] = (src[8] >> 14) & 1073741823;
	des[9] |= (src[9] << 18) & 1073741823;
	des[10] = (src[9] >> 12) & 1073741823;
	des[10] |= (src[10] << 20) & 1073741823;
	des[11] = (src[10] >> 10) & 1073741823;
	des[11] |= (src[11] << 22) & 1073741823;
	des[12] = (src[11] >> 8) & 1073741823;
	des[12] |= (src[12] << 24) & 1073741823;
	des[13] = (src[12] >> 6) & 1073741823;
	des[13] |= (src[13] << 26) & 1073741823;
	des[14] = (src[13] >> 4) & 1073741823;
	des[14] |= (src[14] << 28) & 1073741823;
	des[15] = (src[14] >> 2) & 1073741823;
}

template<typename T>
void AFOR_unpack_16_31(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 2147483647;
	des[1] = (src[0] >> 31) & 2147483647;
	des[1] |= (src[1] << 1) & 2147483647;
	des[2] = (src[1] >> 30) & 2147483647;
	des[2] |= (src[2] << 2) & 2147483647;
	des[3] = (src[2] >> 29) & 2147483647;
	des[3] |= (src[3] << 3) & 2147483647;
	des[4] = (src[3] >> 28) & 2147483647;
	des[4] |= (src[4] << 4) & 2147483647;
	des[5] = (src[4] >> 27) & 2147483647;
	des[5] |= (src[5] << 5) & 2147483647;
	des[6] = (src[5] >> 26) & 2147483647;
	des[6] |= (src[6] << 6) & 2147483647;
	des[7] = (src[6] >> 25) & 2147483647;
	des[7] |= (src[7] << 7) & 2147483647;
	des[8] = (src[7] >> 24) & 2147483647;
	des[8] |= (src[8] << 8) & 2147483647;
	des[9] = (src[8] >> 23) & 2147483647;
	des[9] |= (src[9] << 9) & 2147483647;
	des[10] = (src[9] >> 22) & 2147483647;
	des[10] |= (src[10] << 10) & 2147483647;
	des[11] = (src[10] >> 21) & 2147483647;
	des[11] |= (src[11] << 11) & 2147483647;
	des[12] = (src[11] >> 20) & 2147483647;
	des[12] |= (src[12] << 12) & 2147483647;
	des[13] = (src[12] >> 19) & 2147483647;
	des[13] |= (src[13] << 13) & 2147483647;
	des[14] = (src[13] >> 18) & 2147483647;
	des[14] |= (src[14] << 14) & 2147483647;
	des[15] = (src[14] >> 17) & 2147483647;
	des[15] |= (src[15] << 15) & 2147483647;
}

template<typename T>
void AFOR_unpack_16_32(T * des, const uint32_t *src) {
	des[0] = (src[0]);
	des[1] = (src[1]);
	des[2] = (src[2]);
	des[3] = (src[3]);
	des[4] = (src[4]);
	des[5] = (src[5]);
	des[6] = (src[6]);
	des[7] = (src[7]);
	des[8] = (src[8]);
	des[9] = (src[9]);
	des[10] = (src[10]);
	des[11] = (src[11]);
	des[12] = (src[12]);
	des[13] = (src[13]);
	des[14] = (src[14]);
	des[15] = (src[15]);
}

template<typename T>
void AFOR_unpack_8_1(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 1;
	des[1] = (src[0] >> 1) & 1;
	des[2] = (src[0] >> 2) & 1;
	des[3] = (src[0] >> 3) & 1;
	des[4] = (src[0] >> 4) & 1;
	des[5] = (src[0] >> 5) & 1;
	des[6] = (src[0] >> 6) & 1;
	des[7] = (src[0] >> 7) & 1;
}

template<typename T>
void AFOR_unpack_8_2(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 3;
	des[1] = (src[0] >> 2) & 3;
	des[2] = (src[0] >> 4) & 3;
	des[3] = (src[0] >> 6) & 3;
	des[4] = (src[0] >> 8) & 3;
	des[5] = (src[0] >> 10) & 3;
	des[6] = (src[0] >> 12) & 3;
	des[7] = (src[0] >> 14) & 3;
}

template<typename T>
void AFOR_unpack_8_3(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 7;
	des[1] = (src[0] >> 3) & 7;
	des[2] = (src[0] >> 6) & 7;
	des[3] = (src[0] >> 9) & 7;
	des[4] = (src[0] >> 12) & 7;
	des[5] = (src[0] >> 15) & 7;
	des[6] = (src[0] >> 18) & 7;
	des[7] = (src[0] >> 21) & 7;
}

template<typename T>
void AFOR_unpack_8_4(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 15;
	des[1] = (src[0] >> 4) & 15;
	des[2] = (src[0] >> 8) & 15;
	des[3] = (src[0] >> 12) & 15;
	des[4] = (src[0] >> 16) & 15;
	des[5] = (src[0] >> 20) & 15;
	des[6] = (src[0] >> 24) & 15;
	des[7] = (src[0] >> 28) & 15;
}

template<typename T>
void AFOR_unpack_8_5(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 31;
	des[1] = (src[0] >> 5) & 31;
	des[2] = (src[0] >> 10) & 31;
	des[3] = (src[0] >> 15) & 31;
	des[4] = (src[0] >> 20) & 31;
	des[5] = (src[0] >> 25) & 31;
	des[6] = (src[0] >> 30) & 31;
	des[6] |= (src[1] << 2) & 31;
	des[7] = (src[1] >> 3) & 31;
}

template<typename T>
void AFOR_unpack_8_6(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 63;
	des[1] = (src[0] >> 6) & 63;
	des[2] = (src[0] >> 12) & 63;
	des[3] = (src[0] >> 18) & 63;
	des[4] = (src[0] >> 24) & 63;
	des[5] = (src[0] >> 30) & 63;
	des[5] |= (src[1] << 2) & 63;
	des[6] = (src[1] >> 4) & 63;
	des[7] = (src[1] >> 10) & 63;
}

template<typename T>
void AFOR_unpack_8_7(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 127;
	des[1] = (src[0] >> 7) & 127;
	des[2] = (src[0] >> 14) & 127;
	des[3] = (src[0] >> 21) & 127;
	des[4] = (src[0] >> 28) & 127;
	des[4] |= (src[1] << 4) & 127;
	des[5] = (src[1] >> 3) & 127;
	des[6] = (src[1] >> 10) & 127;
	des[7] = (src[1] >> 17) & 127;
}

template<typename T>
void AFOR_unpack_8_8(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 255;
	des[1] = (src[0] >> 8) & 255;
	des[2] = (src[0] >> 16) & 255;
	des[3] = (src[0] >> 24) & 255;
	des[4] = (src[1]) & 255;
	des[5] = (src[1] >> 8) & 255;
	des[6] = (src[1] >> 16) & 255;
	des[7] = (src[1] >> 24) & 255;
}

template<typename T>
void AFOR_unpack_8_9(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 511;
	des[1] = (src[0] >> 9) & 511;
	des[2] = (src[0] >> 18) & 511;
	des[3] = (src[0] >> 27) & 511;
	des[3] |= (src[1] << 5) & 511;
	des[4] = (src[1] >> 4) & 511;
	des[5] = (src[1] >> 13) & 511;
	des[6] = (src[1] >> 22) & 511;
	des[7] = (src[1] >> 31) & 511;
	des[7] |= (src[2] << 1) & 511;
}

template<typename T>
void AFOR_unpack_8_10(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 1023;
	des[1] = (src[0] >> 10) & 1023;
	des[2] = (src[0] >> 20) & 1023;
	des[3] = (src[0] >> 30) & 1023;
	des[3] |= (src[1] << 2) & 1023;
	des[4] = (src[1] >> 8) & 1023;
	des[5] = (src[1] >> 18) & 1023;
	des[6] = (src[1] >> 28) & 1023;
	des[6] |= (src[2] << 4) & 1023;
	des[7] = (src[2] >> 6) & 1023;
}

template<typename T>
void AFOR_unpack_8_11(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 2047;
	des[1] = (src[0] >> 11) & 2047;
	des[2] = (src[0] >> 22) & 2047;
	des[2] |= (src[1] << 10) & 2047;
	des[3] = (src[1] >> 1) & 2047;
	des[4] = (src[1] >> 12) & 2047;
	des[5] = (src[1] >> 23) & 2047;
	des[5] |= (src[2] << 9) & 2047;
	des[6] = (src[2] >> 2) & 2047;
	des[7] = (src[2] >> 13) & 2047;
}

template<typename T>
void AFOR_unpack_8_12(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 4095;
	des[1] = (src[0] >> 12) & 4095;
	des[2] = (src[0] >> 24) & 4095;
	des[2] |= (src[1] << 8) & 4095;
	des[3] = (src[1] >> 4) & 4095;
	des[4] = (src[1] >> 16) & 4095;
	des[5] = (src[1] >> 28) & 4095;
	des[5] |= (src[2] << 4) & 4095;
	des[6] = (src[2] >> 8) & 4095;
	des[7] = (src[2] >> 20) & 4095;
}

template<typename T>
void AFOR_unpack_8_13(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 8191;
	des[1] = (src[0] >> 13) & 8191;
	des[2] = (src[0] >> 26) & 8191;
	des[2] |= (src[1] << 6) & 8191;
	des[3] = (src[1] >> 7) & 8191;
	des[4] = (src[1] >> 20) & 8191;
	des[4] |= (src[2] << 12) & 8191;
	des[5] = (src[2] >> 1) & 8191;
	des[6] = (src[2] >> 14) & 8191;
	des[7] = (src[2] >> 27) & 8191;
	des[7] |= (src[3] << 5) & 8191;
}

template<typename T>
void AFOR_unpack_8_14(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 16383;
	des[1] = (src[0] >> 14) & 16383;
	des[2] = (src[0] >> 28) & 16383;
	des[2] |= (src[1] << 4) & 16383;
	des[3] = (src[1] >> 10) & 16383;
	des[4] = (src[1] >> 24) & 16383;
	des[4] |= (src[2] << 8) & 16383;
	des[5] = (src[2] >> 6) & 16383;
	des[6] = (src[2] >> 20) & 16383;
	des[6] |= (src[3] << 12) & 16383;
	des[7] = (src[3] >> 2) & 16383;
}

template<typename T>
void AFOR_unpack_8_15(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 32767;
	des[1] = (src[0] >> 15) & 32767;
	des[2] = (src[0] >> 30) & 32767;
	des[2] |= (src[1] << 2) & 32767;
	des[3] = (src[1] >> 13) & 32767;
	des[4] = (src[1] >> 28) & 32767;
	des[4] |= (src[2] << 4) & 32767;
	des[5] = (src[2] >> 11) & 32767;
	des[6] = (src[2] >> 26) & 32767;
	des[6] |= (src[3] << 6) & 32767;
	des[7] = (src[3] >> 9) & 32767;
}

template<typename T>
void AFOR_unpack_8_16(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 65535;
	des[1] = (src[0] >> 16) & 65535;
	des[2] = (src[1]) & 65535;
	des[3] = (src[1] >> 16) & 65535;
	des[4] = (src[2]) & 65535;
	des[5] = (src[2] >> 16) & 65535;
	des[6] = (src[3]) & 65535;
	des[7] = (src[3] >> 16) & 65535;
}

template<typename T>
void AFOR_unpack_8_17(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 131071;
	des[1] = (src[0] >> 17) & 131071;
	des[1] |= (src[1] << 15) & 131071;
	des[2] = (src[1] >> 2) & 131071;
	des[3] = (src[1] >> 19) & 131071;
	des[3] |= (src[2] << 13) & 131071;
	des[4] = (src[2] >> 4) & 131071;
	des[5] = (src[2] >> 21) & 131071;
	des[5] |= (src[3] << 11) & 131071;
	des[6] = (src[3] >> 6) & 131071;
	des[7] = (src[3] >> 23) & 131071;
	des[7] |= (src[4] << 9) & 131071;
}

template<typename T>
void AFOR_unpack_8_18(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 262143;
	des[1] = (src[0] >> 18) & 262143;
	des[1] |= (src[1] << 14) & 262143;
	des[2] = (src[1] >> 4) & 262143;
	des[3] = (src[1] >> 22) & 262143;
	des[3] |= (src[2] << 10) & 262143;
	des[4] = (src[2] >> 8) & 262143;
	des[5] = (src[2] >> 26) & 262143;
	des[5] |= (src[3] << 6) & 262143;
	des[6] = (src[3] >> 12) & 262143;
	des[7] = (src[3] >> 30) & 262143;
	des[7] |= (src[4] << 2) & 262143;
}

template<typename T>
void AFOR_unpack_8_19(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 524287;
	des[1] = (src[0] >> 19) & 524287;
	des[1] |= (src[1] << 13) & 524287;
	des[2] = (src[1] >> 6) & 524287;
	des[3] = (src[1] >> 25) & 524287;
	des[3] |= (src[2] << 7) & 524287;
	des[4] = (src[2] >> 12) & 524287;
	des[5] = (src[2] >> 31) & 524287;
	des[5] |= (src[3] << 1) & 524287;
	des[6] = (src[3] >> 18) & 524287;
	des[6] |= (src[4] << 14) & 524287;
	des[7] = (src[4] >> 5) & 524287;
}

template<typename T>
void AFOR_unpack_8_20(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 1048575;
	des[1] = (src[0] >> 20) & 1048575;
	des[1] |= (src[1] << 12) & 1048575;
	des[2] = (src[1] >> 8) & 1048575;
	des[3] = (src[1] >> 28) & 1048575;
	des[3] |= (src[2] << 4) & 1048575;
	des[4] = (src[2] >> 16) & 1048575;
	des[4] |= (src[3] << 16) & 1048575;
	des[5] = (src[3] >> 4) & 1048575;
	des[6] = (src[3] >> 24) & 1048575;
	des[6] |= (src[4] << 8) & 1048575;
	des[7] = (src[4] >> 12) & 1048575;
}

template<typename T>
void AFOR_unpack_8_21(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 2097151;
	des[1] = (src[0] >> 21) & 2097151;
	des[1] |= (src[1] << 11) & 2097151;
	des[2] = (src[1] >> 10) & 2097151;
	des[3] = (src[1] >> 31) & 2097151;
	des[3] |= (src[2] << 1) & 2097151;
	des[4] = (src[2] >> 20) & 2097151;
	des[4] |= (src[3] << 12) & 2097151;
	des[5] = (src[3] >> 9) & 2097151;
	des[6] = (src[3] >> 30) & 2097151;
	des[6] |= (src[4] << 2) & 2097151;
	des[7] = (src[4] >> 19) & 2097151;
	des[7] |= (src[5] << 13) & 2097151;
}

template<typename T>
void AFOR_unpack_8_22(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 4194303;
	des[1] = (src[0] >> 22) & 4194303;
	des[1] |= (src[1] << 10) & 4194303;
	des[2] = (src[1] >> 12) & 4194303;
	des[2] |= (src[2] << 20) & 4194303;
	des[3] = (src[2] >> 2) & 4194303;
	des[4] = (src[2] >> 24) & 4194303;
	des[4] |= (src[3] << 8) & 4194303;
	des[5] = (src[3] >> 14) & 4194303;
	des[5] |= (src[4] << 18) & 4194303;
	des[6] = (src[4] >> 4) & 4194303;
	des[7] = (src[4] >> 26) & 4194303;
	des[7] |= (src[5] << 6) & 4194303;
}

template<typename T>
void AFOR_unpack_8_23(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 8388607;
	des[1] = (src[0] >> 23) & 8388607;
	des[1] |= (src[1] << 9) & 8388607;
	des[2] = (src[1] >> 14) & 8388607;
	des[2] |= (src[2] << 18) & 8388607;
	des[3] = (src[2] >> 5) & 8388607;
	des[4] = (src[2] >> 28) & 8388607;
	des[4] |= (src[3] << 4) & 8388607;
	des[5] = (src[3] >> 19) & 8388607;
	des[5] |= (src[4] << 13) & 8388607;
	des[6] = (src[4] >> 10) & 8388607;
	des[6] |= (src[5] << 22) & 8388607;
	des[7] = (src[5] >> 1) & 8388607;
}

template<typename T>
void AFOR_unpack_8_24(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 16777215;
	des[1] = (src[0] >> 24) & 16777215;
	des[1] |= (src[1] << 8) & 16777215;
	des[2] = (src[1] >> 16) & 16777215;
	des[2] |= (src[2] << 16) & 16777215;
	des[3] = (src[2] >> 8) & 16777215;
	des[4] = (src[3]) & 16777215;
	des[5] = (src[3] >> 24) & 16777215;
	des[5] |= (src[4] << 8) & 16777215;
	des[6] = (src[4] >> 16) & 16777215;
	des[6] |= (src[5] << 16) & 16777215;
	des[7] = (src[5] >> 8) & 16777215;
}

template<typename T>
void AFOR_unpack_8_25(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 33554431;
	des[1] = (src[0] >> 25) & 33554431;
	des[1] |= (src[1] << 7) & 33554431;
	des[2] = (src[1] >> 18) & 33554431;
	des[2] |= (src[2] << 14) & 33554431;
	des[3] = (src[2] >> 11) & 33554431;
	des[3] |= (src[3] << 21) & 33554431;
	des[4] = (src[3] >> 4) & 33554431;
	des[5] = (src[3] >> 29) & 33554431;
	des[5] |= (src[4] << 3) & 33554431;
	des[6] = (src[4] >> 22) & 33554431;
	des[6] |= (src[5] << 10) & 33554431;
	des[7] = (src[5] >> 15) & 33554431;
	des[7] |= (src[6] << 17) & 33554431;
}

template<typename T>
void AFOR_unpack_8_26(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 67108863;
	des[1] = (src[0] >> 26) & 67108863;
	des[1] |= (src[1] << 6) & 67108863;
	des[2] = (src[1] >> 20) & 67108863;
	des[2] |= (src[2] << 12) & 67108863;
	des[3] = (src[2] >> 14) & 67108863;
	des[3] |= (src[3] << 18) & 67108863;
	des[4] = (src[3] >> 8) & 67108863;
	des[4] |= (src[4] << 24) & 67108863;
	des[5] = (src[4] >> 2) & 67108863;
	des[6] = (src[4] >> 28) & 67108863;
	des[6] |= (src[5] << 4) & 67108863;
	des[7] = (src[5] >> 22) & 67108863;
	des[7] |= (src[6] << 10) & 67108863;
}

template<typename T>
void AFOR_unpack_8_27(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 134217727;
	des[1] = (src[0] >> 27) & 134217727;
	des[1] |= (src[1] << 5) & 134217727;
	des[2] = (src[1] >> 22) & 134217727;
	des[2] |= (src[2] << 10) & 134217727;
	des[3] = (src[2] >> 17) & 134217727;
	des[3] |= (src[3] << 15) & 134217727;
	des[4] = (src[3] >> 12) & 134217727;
	des[4] |= (src[4] << 20) & 134217727;
	des[5] = (src[4] >> 7) & 134217727;
	des[5] |= (src[5] << 25) & 134217727;
	des[6] = (src[5] >> 2) & 134217727;
	des[7] = (src[5] >> 29) & 134217727;
	des[7] |= (src[6] << 3) & 134217727;
}

template<typename T>
void AFOR_unpack_8_28(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 268435455;
	des[1] = (src[0] >> 28) & 268435455;
	des[1] |= (src[1] << 4) & 268435455;
	des[2] = (src[1] >> 24) & 268435455;
	des[2] |= (src[2] << 8) & 268435455;
	des[3] = (src[2] >> 20) & 268435455;
	des[3] |= (src[3] << 12) & 268435455;
	des[4] = (src[3] >> 16) & 268435455;
	des[4] |= (src[4] << 16) & 268435455;
	des[5] = (src[4] >> 12) & 268435455;
	des[5] |= (src[5] << 20) & 268435455;
	des[6] = (src[5] >> 8) & 268435455;
	des[6] |= (src[6] << 24) & 268435455;
	des[7] = (src[6] >> 4) & 268435455;
}

template<typename T>
void AFOR_unpack_8_29(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 536870911;
	des[1] = (src[0] >> 29) & 536870911;
	des[1] |= (src[1] << 3) & 536870911;
	des[2] = (src[1] >> 26) & 536870911;
	des[2] |= (src[2] << 6) & 536870911;
	des[3] = (src[2] >> 23) & 536870911;
	des[3] |= (src[3] << 9) & 536870911;
	des[4] = (src[3] >> 20) & 536870911;
	des[4] |= (src[4] << 12) & 536870911;
	des[5] = (src[4] >> 17) & 536870911;
	des[5] |= (src[5] << 15) & 536870911;
	des[6] = (src[5] >> 14) & 536870911;
	des[6] |= (src[6] << 18) & 536870911;
	des[7] = (src[6] >> 11) & 536870911;
	des[7] |= (src[7] << 21) & 536870911;
}

template<typename T>
void AFOR_unpack_8_30(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 1073741823;
	des[1] = (src[0] >> 30) & 1073741823;
	des[1] |= (src[1] << 2) & 1073741823;
	des[2] = (src[1] >> 28) & 1073741823;
	des[2] |= (src[2] << 4) & 1073741823;
	des[3] = (src[2] >> 26) & 1073741823;
	des[3] |= (src[3] << 6) & 1073741823;
	des[4] = (src[3] >> 24) & 1073741823;
	des[4] |= (src[4] << 8) & 1073741823;
	des[5] = (src[4] >> 22) & 1073741823;
	des[5] |= (src[5] << 10) & 1073741823;
	des[6] = (src[5] >> 20) & 1073741823;
	des[6] |= (src[6] << 12) & 1073741823;
	des[7] = (src[6] >> 18) & 1073741823;
	des[7] |= (src[7] << 14) & 1073741823;
}

template<typename T>
void AFOR_unpack_8_31(T * des, const uint32_t *src) {
	des[0] = (src[0]) & 2147483647;
	des[1] = (src[0] >> 31) & 2147483647;
	des[1] |= (src[1] << 1) & 2147483647;
	des[2] = (src[1] >> 30) & 2147483647;
	des[2] |= (src[2] << 2) & 2147483647;
	des[3] = (src[2] >> 29) & 2147483647;
	des[3] |= (src[3] << 3) & 2147483647;
	des[4] = (src[3] >> 28) & 2147483647;
	des[4] |= (src[4] << 4) & 2147483647;
	des[5] = (src[4] >> 27) & 2147483647;
	des[5] |= (src[5] << 5) & 2147483647;
	des[6] = (src[5] >> 26) & 2147483647;
	des[6] |= (src[6] << 6) & 2147483647;
	des[7] = (src[6] >> 25) & 2147483647;
	des[7] |= (src[7] << 7) & 2147483647;
}

template<typename T>
void AFOR_unpack_8_32(T * des, const uint32_t *src) {
	des[0] = (src[0]);
	des[1] = (src[1]);
	des[2] = (src[2]);
	des[3] = (src[3]);
	des[4] = (src[4]);
	des[5] = (src[5]);
	des[6] = (src[6]);
	des[7] = (src[7]);
}

}
}

#endif /* AFOR_UNPACK_HPP_ */


/*
 *
meta code:

#include <iostream>
#include <sstream>
#include <string>
#include <stdint.h>

using namespace std;

string Int2Str(int num) {
	ostringstream oss;
	oss << num;
	return oss.str();
}


string GenCode(int num) {
	ostringstream oss;
	for (int i=1; i<=32; i++) {
		oss << "template<typename T>" << endl;
		oss << "void AFOR_unpack_" << num << "_" << i << "(T * des, const uint32_t *src) {" << endl;
		int offsetInWord = 0;
		int curWordIdx = 0;
		int j = 0;
		uint32_t mask  = (1LL << i) - 1;
		while (j < num) {
			ostringstream tmp1;
			tmp1 << "\t" << "des[" << j << "] = (src[" << curWordIdx << "]";
			if (offsetInWord > 0)
				tmp1 << " >> " << offsetInWord;
			tmp1 << ")";
			if (i < 32)
				tmp1 << " & " << mask;
			tmp1 << ";" << endl;
			oss << tmp1.str();

			if (offsetInWord + i > 32) {
				ostringstream tmp2;
				tmp2 << "\t" << "des[" << j << "] |= (src[" << curWordIdx + 1 << "]";
				tmp2 << " << " << 32 - offsetInWord;
				tmp2 << ")";
				if (i < 32)
					tmp2 << " & " << mask;
				tmp2 << ";" << endl;
                        	oss << tmp2.str();
			}

			curWordIdx += (offsetInWord + i) / 32;
			offsetInWord = (offsetInWord + i) % 32;
			j++;
		}
		oss << "}" << endl;
		oss << endl;

	}
	return oss.str();

}


int main() {
	cout << GenCode(32);
	cout << GenCode(16);
	cout << GenCode(8);
	return 0;
}


 *
 *
 *
 */
